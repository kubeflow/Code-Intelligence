{"data": {"repository": {"issues": {"totalCount": 103, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Spread PR review/approve workload around", "body": "The number of contributors/contributions is growing quite rapidly.\r\n\r\nWe need to spread the review/approve workload around or we won't be able to continue to scale.\r\n\r\nKubernetes has a lot of processes and associated tooling for assigning reviewers and approvers. I think Kubernetes uses owners files. \r\n\r\nAlso prow provides a PR dashboard that I think helps Kubernetes contributors see PRs that need their attention.\r\n\r\nThe purpose of this PR is to figure out what we should do and track the work to implement.\r\n\r\nIf anyone is familiar with what Kubernetes does, can you chime in and explain or provide a reference?", "comments": {"totalCount": 14, "edges": [{"node": {"author": {"__typename": "User", "login": "erikerlandson"}, "body": "SGTM. Would it be a good idea to somehow mirror the contents of these OWNER files on the `community` repo?  Possibly just a table of links to those files would suffice.", "createdAt": "2018-02-16T17:35:27Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@erikerlandson Why do we need to mirror OWNERS files? My understanding is that every repo should have an OWNERS file at the root and then this can be overwritten/extended by placing OWNERS files in other parts of the repository source tree.\r\n\r\nSo my expectation is that once we socialize the convention and document it in the community repository, everyone would know exactly where to look to find the OWNERS file containing lists of approvers/reviewers.", "createdAt": "2018-02-16T18:07:37Z"}}, {"node": {"author": {"__typename": "User", "login": "erikerlandson"}, "body": "@jlewi that is the question; are OWNERS files self documenting? I haven't used them. The argument for \"mirroring\" would be maximizing discoverability, but documenting \"look for the OWNER file with most specific scope\" might be fine.", "createdAt": "2018-02-16T18:27:55Z"}}, {"node": {"author": {"__typename": "User", "login": "ddysher"}, "body": "@erikerlandson prow will suggest appropriate assignee, point folks (pr author, etc) to correct documentation and interact with them in some cases.  Let's see if it works for us.\r\n\r\n@jlewi what do you suggest for next step?  if we start from tf-operator, we need to setup prow job as mentioned above, and draft OWNERS files.\r\n\r\nnote it seems we use `k8s-ci-bot`, but we'd better use our own account?", "createdAt": "2018-02-17T04:03:24Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@ddysher I think setting up tf-operator to use OWNERS and K8s  tooling seems like a good next step. If you think we should setup our own bot; I'm fine with that. Not sure what that actually entails.\r\n", "createdAt": "2018-02-21T14:33:40Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "So I think the next steps are\r\n\r\n1. Ensure k8s-ci-bot has appropriate permissions on the repo (is write sufficient) or is admin needed?\r\n2. Ensure appropriate prow plugins are enabled for Kubeflow\r\nhttps://prow.k8s.io/command-help", "createdAt": "2018-02-26T21:52:56Z"}}, {"node": {"author": {"__typename": "User", "login": "foxish"}, "body": "On K8s, we started with contrib first as testing ground. https://github.com/coreos/findowner was helpful in finding recent contributors and getting a set of reviewers and approvers for each level in the tree. I think k8s-ci-bot just needs write for reading owner files. \r\n\r\nRelated: https://github.com/kubernetes/contrib/pull/1438", "createdAt": "2018-02-26T22:06:31Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I found these great directions for the Kubernetes PR process.\r\nhttps://github.com/kubernetes/community/blob/master/contributors/guide/owners.md#code-review-using-owners-files\r\n\r\nThe plugins were enabled so we can now do /approve, /assign, /lgtm etc..\r\n\r\nblunderbuss is not enabled so we don't auto-suggest reviewers; that could be very useful for spreading the workload around.\r\n\r\nAuto merging of code doesn't seem to be enabled yet and I'm not sure what that entails.", "createdAt": "2018-02-27T20:37:09Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Here are some docs about automatic merge:\r\nhttps://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#the-testing-and-merge-workflow\r\n\r\nWe probably don't need that right now.", "createdAt": "2018-02-27T20:44:04Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "We have opened up issues for follow on work. \r\nSo I'm closing this one.", "createdAt": "2018-02-27T20:49:58Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Generate reports with interesting GitHub metrics", "body": "It would be useful to have dashboards for things like\r\n\r\n  - Number of committers\r\n  - Number of PRs\r\n  - Number of issues open/closed\r\n\r\nDoes Kubernetes do anything like this?\r\n\r\nIt looks like GitHub provides some insights but this appears to be per repository. It would be nice to aggregate across all repositories in the Kubeflow org. \r\n\r\nIs there an easy way to do this?\r\n\r\nOne possible option might be to use the public [GitHub data in BigQuery](https://cloud.google.com/bigquery/public-data/github).\r\n", "comments": {"totalCount": 1, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Duplicate of #34", "createdAt": "2018-03-22T21:30:26Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Define common issue labels for all repositories", "body": "See kubeflow/tf-operator#326 for an initial discussion of common labels for issues.\r\n\r\nI think most of the labels are uncontroversial e.g. labels for different priorities and furthermore should be applied consistently across all repositories.\r\n\r\nOpening this issue to track defining those labels across all our current repositories.\r\n\r\nIs there any easy way to enforce a common set of labels across multiple repositories?", "comments": {"totalCount": 11, "edges": [{"node": {"author": {"__typename": "User", "login": "chrisheecho"}, "body": "Hi team, @texasmichelle and I worked on the [first iteration of the labels.](https://docs.google.com/spreadsheets/d/1u1jelEPca6-S8Ozcq4snDOBy4q4--J7Ois2YV59PNS4/edit?usp=sharing) Please take a look and review by next community meeting. would love to get feedback if you are interested\r\n\r\nI've added comments access to everyone who have access to kubeflow-discuss@googlegroups.com", "createdAt": "2018-02-27T18:43:40Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "@chrisheecho Thanks for your work, generally LGTM although I added some comments.", "createdAt": "2018-02-28T03:11:27Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "LGTM.\r\n\r\nCreated #24 to actually sync the labels.", "createdAt": "2018-03-01T18:11:21Z"}}, {"node": {"author": {"__typename": "User", "login": "texasmichelle"}, "body": "@chrisheecho have we memorialized this list anywhere yet? Perhaps CONTRIBUTING.md in either [kubeflow/kubeflow](https://github.com/kubeflow/kubeflow/blob/master/CONTRIBUTING.md) or [kubeflow/community](https://github.com/kubeflow/community/blob/master/contributing.md) would be a good place. I'll submit a PR using the Sheets doc if you haven't put them somewhere else.", "createdAt": "2018-03-12T20:38:11Z"}}, {"node": {"author": {"__typename": "User", "login": "chrisheecho"}, "body": "Yes that sounds good. Frankly I didn't know we had to do that. Sgtm do what\nyou gotta do\n\nOn Mon, 12 Mar 2018, 8:38 pm Michelle Casbon, <notifications@github.com>\nwrote:\n\n> @chrisheecho <https://github.com/chrisheecho> have we memorialized this\n> list anywhere yet? Perhaps CONTRIBUTING.md in either kubeflow/kubeflow\n> <https://github.com/kubeflow/kubeflow/blob/master/CONTRIBUTING.md> or\n> kubeflow/community\n> <https://github.com/kubeflow/community/blob/master/contributing.md> would\n> be a good place. I'll submit a PR using the Sheets doc if you haven't put\n> them somewhere else.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/kubeflow/community/issues/12#issuecomment-372454279>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AKenSGFWuB8WmGhire87pJm5C2tVeMSrks5tdtyzgaJpZM4SIuCP>\n> .\n>\n", "createdAt": "2018-03-12T20:43:49Z"}}, {"node": {"author": {"__typename": "User", "login": "texasmichelle"}, "body": "Better to commit a markdown file to the repo instead of relying on a link to a Sheets doc buried in a closed issue.", "createdAt": "2018-03-12T21:26:20Z"}}, {"node": {"author": {"__typename": "User", "login": "chrisheecho"}, "body": "great. if you are busy with your GH issue stuff I can do this too just lmk\n\n\nOn Mon, Mar 12, 2018 at 9:26 PM Michelle Casbon <notifications@github.com>\nwrote:\n\n> Better to commit a markdown file to the repo instead of relying on a link\n> to a Sheets doc buried in a closed issue.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/kubeflow/community/issues/12#issuecomment-372468164>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AKenSNz7L0JHDdW8MxhnAqgpLGWkdfRPks5tduf9gaJpZM4SIuCP>\n> .\n>\n", "createdAt": "2018-03-12T23:35:54Z"}}, {"node": {"author": {"__typename": "User", "login": "texasmichelle"}, "body": "It's cool - the PR is ready to merge", "createdAt": "2018-03-13T01:07:14Z"}}, {"node": {"author": {"__typename": "User", "login": "texasmichelle"}, "body": "As @jlewi pointed out on today's community call, `help wanted` and `good first issue` are [GitHub-wide guidelines](https://help.github.com/articles/helping-new-contributors-find-your-project-with-labels/), so it makes sense to remove `starter` in favor of these. My preference is to choose one of them,  so unless anyone really wants both, I'll create a PR with `good first issue`.", "createdAt": "2018-03-13T23:47:15Z"}}, {"node": {"author": {"__typename": "User", "login": "chrisheecho"}, "body": "Sgtm!\n\nOn Tue, 13 Mar 2018, 11:47 pm Michelle Casbon, <notifications@github.com>\nwrote:\n\n> As @jlewi <https://github.com/jlewi> pointed out on today's community\n> call, help wanted and good first issue are GitHub-wide guidelines\n> <https://help.github.com/articles/helping-new-contributors-find-your-project-with-labels/>,\n> so it makes sense to remove starter in favor of these. My preference is\n> to choose one of them, so unless anyone really wants both, I'll create a PR\n> with good first issue.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/kubeflow/community/issues/12#issuecomment-372857230>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AKenSAJ5PaVjkealq8gVBZGLwOFyUC6Sks5teFqEgaJpZM4SIuCP>\n> .\n>\n", "createdAt": "2018-03-14T19:32:23Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[Mini proposal] for structuring python code", "body": "Most of our repositories have some python code. I suggest we adopt the following conventions\r\n\r\nAll python code should be located in\r\n\r\n```\r\npy/\r\n    kubeflow/\r\n           {REPO_NAME}\r\n```\r\n\r\nThe advantage of this layout is we can just  add the py directory to our PYTHONPATH and then we can import code as\r\n\r\n```\r\nkubeflow.{REPO_NAME}....\r\n```\r\n\r\nGiving each repository a unique package based on its name name should avoid name conflicts.\r\n\r\nStarting this as a GitHub issue. I can turn this into a full proposal if we think its necessary.", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "amitkumarj441"}, "title": "Add slack auto-generates invites - Open for everyone", "body": "# Why auto-generates invites?\r\nIt helps user to get its own invite link and anyone can easily join without searching for a shared / invitation link.\r\n\r\nOngoing PR - #13 \r\n", "comments": {"totalCount": 8, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "It looks like we have the slackin APP enabled for kubeflow.slack.com\r\nhttps://github.com/rauchg/slackin\r\n\r\nWe also have a shared invite link in our Getting Involved page\r\nhttps://github.com/kubeflow/kubeflow#get-involved\r\n\r\n@aronchick Is that link sending a request each time someone wants to join?", "createdAt": "2018-02-22T20:26:49Z"}}, {"node": {"author": {"__typename": "User", "login": "amitkumarj441"}, "body": "Actually https://github.com/kubeflow/kubeflow#get-involved is a shared invite link (I hadn't have a chance to be in trouble) and shared invite (means token) used to get access. It basically let's users to have a token in their hand (not [legacy token](https://api.slack.com/custom-integrations/legacy-tokens)). \r\n\r\nYes @jlewi, It sends request as well as weekly reminder (depending on the channel settings by admin). ", "createdAt": "2018-02-22T20:34:33Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "According to @vkoukis our shared invite link might no longer work.\r\n\r\nMaybe its time to setup slackin or some other solution?", "createdAt": "2018-11-19T03:19:17Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Here's another potential solution\r\nhttps://publicslack.com/#how-it-works", "createdAt": "2018-11-19T03:22:21Z"}}, {"node": {"author": {"__typename": "User", "login": "vanpelt"}, "body": "The slack invite link here has expired: https://www.kubeflow.org/docs/about/community  It should be easy for the slack admin to generate a new one that doesn't expire...", "createdAt": "2018-11-27T04:51:50Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@vanpelt Do you have instructions for how to generate an invite link that doesn't expire? I don't know how the original link was generated.\r\n\r\n@aronchick Do you remember?", "createdAt": "2018-11-28T02:58:54Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Ok I generated a new link\r\nI did this by selection\r\nAdministration > Invite Members > Share Link\r\nhttps://join.slack.com/t/kubeflow/shared_invite/enQtNDg5MTM4NTQyNjczLWUyZGI1ZmExZWExYWY4YzlkOWI4NjljNjJhZjhjMjEwNGFjNmVkNjg2NTg4M2I0ZTM5NDExZWI5YTIyMzVmNzM", "createdAt": "2018-11-28T03:02:16Z"}}, {"node": {"author": {"__typename": "User", "login": "vanpelt"}, "body": "Awesome!  I'm in \ud83d\ude0e ", "createdAt": "2018-11-28T03:18:14Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "elsonrodriguez"}, "title": "Create kubeflow/experimental-kvc to house an S3 data management utility", "body": "We have a use-case where we'd like data local to the training processes to maximize throughput, but the datasets are in s3.\r\n\r\nWe've written a controller to manage these datasets and download them to nodes, which can then be bindmounted into a container, and would like to open source it under the kubeflow org.\r\n\r\nPlease  create `kubeflow/experimental-kvc` to house this project.\r\n\r\nAlso proposing that we use the `experimental-...` pattern for other similar helper projects.", "comments": {"totalCount": 4, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I've created the repository to unblock you.\r\n\r\nI also created the team Intel and given it write access to the repository. You are a maintainer so you should be able to add any colleagues at Intel. \r\n\r\nI'll leave this issue open for now to give folks an opportunity to comment in case they think there should be more process before creating experimental projects.\r\n\r\nMy two cents is we should have a pretty low bar for experimental and then at some point a project should go through the proposal process and graduate to something like \"incubating\" or be deleted.", "createdAt": "2018-02-23T02:28:02Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Kubeflow should be Cloud agnostic and K8s native. So eventually we will need to make the tool work everywhere K8s runs and not just with S3.\r\n\r\nI believe Pachyderm does something similar; i.e. copies data to/from the pod to Pachyderm's data store.\r\n\r\nCould this be implemented as volume plugins? So pods could just mount a volume or PVC and the volume plugin/controller would take care of actually making the data available to the pod?\r\n\r\n/cc @dwhitena", "createdAt": "2018-02-23T13:46:05Z"}}, {"node": {"author": {"__typename": "User", "login": "dwhitena"}, "body": "Indeed @jlewi. Here's what Pachyderm already does, which might help put some of this in context based on our experience trying this:\r\n\r\nPachyderm's data is backed in any generic object store (we have an internal object store package that utilizes one of a few object store clients under the hood, for Azure, GCS, and any S3 compatible API). That gives us the flexibility to back the data for data pipelines anywhere in the cloud or on prem.\r\n\r\nThere is a \"worker\" binary that is shimmed into the user containers that run as Pachyderm pipeline stages. When `pachd`, our server, determines that a job needs to run it initiates the worker binary. The binary then downloads the data for the job (as determined by `pachd`) using the Pachyderm client to `/pfs` in the user container, and it runs the command specified by the user (e.g., running some python script). Once the command finishes, the worker binary slurps up all the data in `/pfs/out` as output and sends it back to Pachyderm via the client.\r\n\r\nThere is also a way that data can be accessed lazily in Pachyderm. In this case, the worker binary exposes the data as named pipes rather than actively downloading it to the user container. \r\n\r\nHope this helps give some context. We are currently experimenting and exploring a way to extend this functionality into KubeFlow TFJobs. That way we could trigger and control TFJobs from a Pachyderm pipeline, which would give us the ability to have versioned, scalable ML pipelines on top of KubeFlow (or at least one option for this).", "createdAt": "2018-02-23T13:54:18Z"}}, {"node": {"author": {"__typename": "User", "login": "elsonrodriguez"}, "body": "Thanks for the repo!\r\n\r\nAs @dwhitena mentioned s3 is the lingua franca when it comes object stores, which is why we chose it. For the first pass a https://github.com/kubeflow/examples/issues/2 we're just using the aforementioned simple utility to sync the data, but we'd be happy to checkout or help with Pachyderm for a follow-up example.\r\n\r\n\r\n", "createdAt": "2018-02-23T19:22:08Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Add links to good first issue and help wanted", "body": "Our docs for contributions should provide links for searching for all issues labeled with \"help wanted\" and/or \"good first issue\".\r\n\r\nWe'd like the search results to search across all repositories in the Kubeflow org.", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think https://github.com/issues?q=is%3Aopen+is%3Aissue+org%3Akubeflow+archived%3Afalse+label%3A%22good+first+issue%22 works for us.", "createdAt": "2018-03-01T07:05:37Z"}}, {"node": {"author": {"__typename": "User", "login": "texasmichelle"}, "body": "Annoyingly, search does not support boolean OR, so I included separate links for each of the existing labels, as well as the new starter label.", "createdAt": "2018-03-12T22:55:31Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Document the PR workflow", "body": "Some background in #10 .\r\n\r\nWe should document the PR workflow; e.g. how to assign reviewers/approvers etc...\r\n\r\nAs a starting point we can use the Kubernetes docs\r\nhttps://github.com/kubernetes/community/blob/master/contributors/guide/owners.md#code-review-using-owners-files\r\nhttps://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#the-testing-and-merge-workflow\r\n\r\nBut we probably need to make some changes since we don't \r\n\r\n1. Automatically assign reviewers\r\n1. Automatically merge code.", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/assign jlewi\r\n", "createdAt": "2018-03-02T14:59:58Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "This has been fixed see the relevant markdown files.\r\n\r\n/close", "createdAt": "2018-05-14T17:13:59Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Enable blunderbuss plugin to automatically assign reviewers", "body": "If we use Prow's blunderbuss plugin we should be able to automatically assign reviewers based on OWNERs files.\r\n\r\nhttps://github.com/kubernetes/community/blob/master/contributors/guide/owners.md#the-code-review-process\r\n\r\nThis could be useful for spreading the review workload around and also ensuring PRs are handled in a timely fashion.\r\n\r\nFor more background see #10 .", "comments": {"totalCount": 1, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Looks like its working.\r\nhttps://github.com/kubeflow/kubeflow/pull/323\r\n\r\n@gaocegege and myself were automatically assigned.\r\n", "createdAt": "2018-03-01T22:36:04Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Setup Automatic merge of PRs", "body": "Setting up automatic merging of PRs should help velocity.\r\n\r\n@DjangoPeng I think you said someone on your team has experience setting this up and can do it.", "comments": {"totalCount": 23, "edges": [{"node": {"author": {"__typename": "User", "login": "krzyzacy"}, "body": "hummm maybe because of reviewable is not green?\r\nlooks like it passed batch test\r\n```\r\n\"prs-pending\":null,\"controller\":\"sync\",\"batch-pending\":null,\"prs-missing\":null,\"prs-passing\":[175],\"level\":\"info\",\"batch-passing\":null,\"branch\":\"master\",\"org\":\"kubeflow\"\r\n```", "createdAt": "2018-03-01T22:52:13Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "(I think k8s-ci bot may not have had write for kubeflow/community which is why previous commands in this PR didn't work)\r\n/joke", "createdAt": "2018-03-01T22:53:20Z"}}, {"node": {"author": {"__typename": "User", "login": "BenTheElder"}, "body": "@jlewi the page there has some latency. cc @cjwagner we should load the pools much more frequently", "createdAt": "2018-03-01T22:53:23Z"}}, {"node": {"author": {"__typename": "User", "login": "krzyzacy"}, "body": "```\r\n\"error\":\"invalid character '(' after object key:value pair\",\"component\":\"deck\",\"msg\":\"Updating pool.\",\"level\":\"error\",\"agent\":\"tide\"\r\n```", "createdAt": "2018-03-01T22:53:37Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/assign", "createdAt": "2018-03-01T22:53:39Z"}}, {"node": {"author": {"__typename": "User", "login": "BenTheElder"}, "body": "it's in the pool as WAIT now, you can see it on the page", "createdAt": "2018-03-01T22:53:41Z"}}, {"node": {"author": {"__typename": "User", "login": "BenTheElder"}, "body": "er no, wrong PR :(", "createdAt": "2018-03-01T22:53:57Z"}}, {"node": {"author": {"__typename": "User", "login": "cjwagner"}, "body": "I spun up a busybox pod and curled the tide endpoint that deck is complaining about. It looks like the offending JSON snippet is:\r\n```json\r\n{\"Context\":\"coverage/coveralls\",\"Description\":\"Coverage increased (+0.1%!)(MISSING) to 27.599%!\"(MISSING),\"State\":\"SUCCESS\"}\r\n```\r\n\r\nIs this a bug in the json library?\r\nhttps://github.com/kubernetes/test-infra/blob/ef5978825db04c5c161574ad7395831850ab92df/prow/tide/tide.go#L381", "createdAt": "2018-03-01T23:41:01Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@cjwagner We have Coveralls turned on for kubeflow/tf-operator but not kubeflow/kubeflow. Does this still explain why kubeflow/kubeflow#175 wasn't auto-merged.", "createdAt": "2018-03-02T05:08:00Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "This is working.\r\nhttps://github.com/kubeflow/examples/pull/18#pullrequestreview-100679172\r\n\r\nAs @BenTheElder and @krzyzacy explained above it was the Reviewable status check not being green that was blocking the other PR. I'll change reviewable to not be a status check.\r\n\r\n@BenTheElder @krzyzacy @cjwagner thank you so much for all your help this is awesome.", "createdAt": "2018-03-02T05:32:45Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Setup Documentation site", "body": "Opening an issue to figure out what we want to do about a documentation site.\r\n\r\nDo we want to use  GitHub pages?\r\nhttps://help.github.com/articles/using-a-custom-domain-with-github-pages/\r\n\r\nAre there alternatives?", "comments": {"totalCount": 5, "edges": [{"node": {"author": {"__typename": "User", "login": "ewilderj"}, "body": "I'm very interested in the idea of using [Hugo](https://gohugo.io/) and checking the site into source control. It would provide for future scalability with [things like](https://gohugo.io/about/features/) [localization](https://gohugo.io/content-management/multilingual/) (almost always near impossible to retrofit, and I think we want to have Chinese docs as well as English in the near future) without too much initial overhead, and the ultimate in portability (just files). Hugo actually works with Github Pages too.\r\n\r\nI need to convene the outreach & education SIG who could be an owner for this!", "createdAt": "2018-02-28T15:57:29Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/assign @ewilderj \r\n\r\n@ewilderj Do you want to take this and figure out who should own it?", "createdAt": "2018-03-02T14:59:23Z"}}, {"node": {"author": {"__typename": "User", "login": "ewilderj"}, "body": "cc @nickchase for discussion", "createdAt": "2018-03-21T17:34:12Z"}}, {"node": {"author": {"__typename": "User", "login": "ewilderj"}, "body": "Nick and I are making progress and are assembling team, putting together a backlog\r\nWorking doc is https://docs.google.com/document/d/1XUGnLVCyqVLN62VWqk-o_FLhRU1L4b7VRcwP8QgFst4/edit#\r\n", "createdAt": "2018-04-03T16:04:05Z"}}, {"node": {"author": {"__typename": "User", "login": "ewilderj"}, "body": "Web site repo is now created, looking for people to be part of the team.\r\n\r\nOther news:\r\n\r\nI spoke with the design team at EggsandRice, the agency Google Cloud uses. We asked for a design that could work for Kubecon and beyond.\r\n\r\nThe optimal path probably lies along using a Hugo theme that we like, or proposing several, and they would provide customization to that with things that fit the colors, fonts, etc they choose for the new logo.\r\n\r\nI like the look of https://themes.gohugo.io/kube/ \u2014 but I'm not yet sure of the technical implications of choosing one theme over another, we ought to do a bit of due diligence before committing.\r\n\r\nWeb team conversation is now here: https://groups.google.com/a/kubeflow.org/forum/#!topic/web-team\r\n\r\nAsk to join that group in order to join the team!\r\n", "createdAt": "2018-04-10T22:25:53Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Disable GitHub review requirement and rely on prow?", "body": "We are moving towards using OWNERS and Prow to ensure CLs are LGTM'd and approved.\r\n\r\nShould we disable for our repositories the GitHub check that PRs are approved? It seems like that just forces users to /lgtm/approve requests twice.\r\n", "comments": {"totalCount": 5, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/cc @ddysher @DjangoPeng @gaocegege ", "createdAt": "2018-03-01T03:20:46Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "SGTM", "createdAt": "2018-03-01T03:22:42Z"}}, {"node": {"author": {"__typename": "User", "login": "ddysher"}, "body": "@jlewi with prow, we don't need github review requirement, but we want to make sure prow works well for us at first.", "createdAt": "2018-03-01T05:27:41Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@ddysher Agreed. I think the GitHub review status checks block auto-merge. So if we keep them on people need to approve twice (once with GitHub, once with prow) and possible a third time if Reviewable is enabled as a status check. \r\n\r\nSo my inclination is to start disabling the GitHub status checks so we can really experiment with the Prow workflow. We can always reenable them if need be.\r\n\r\nBut now that you convinced me to try auto-merge, I think its fantastic. I think it will significantly reduce the toil around managing PRs.", "createdAt": "2018-03-02T14:58:05Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think it is time to disable GitHub review feature now, since the bot works well in tf-operator", "createdAt": "2018-03-05T13:39:27Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "DjangoPeng"}, "title": "[Discussion] Is there any work on pytorch-operator.", "body": "In the latest kubeflow community meeting, we discussed the possibility of supporting PyTorch in kubeflow. The example of tf-operator shows one way to start pytorch-operator project.\r\n\r\nFirst of all, we have established a channel called `pytorch-operator` on slack. Anyone who has interest could join in and discuss with other contributors.\r\n\r\nSecondly, we should search for if there are some existing work on `pytorch + k8s`. If so, we'd better add corresponding links, blogs, etc here.\r\n\r\nFinally we could discuss how to `merge` and `cherry-pick` the current work around `pytorch + k8s`. When we reach an agreement on the mission and scope of `pytorch-operator` project, it's time to create a `pytorch-opeartor` repo.\r\n\r\nWDYT @jlewi @ddysher @Jimexist @gaocegege", "comments": {"totalCount": 14, "edges": [{"node": {"author": {"__typename": "User", "login": "erikerlandson"}, "body": "@ddysher +1\r\nThere might be other operator kits to choose from, for example\r\nhttps://github.com/spotahome/kooper\r\nA kit coming out of rook may eventually benefit from a larger community.", "createdAt": "2018-03-02T14:15:41Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I think we should distinguish between distributed and non-distributed PyTorch.\r\n\r\nI think non-distributed PyTorch might be a relatively low investment; its mostly about getting the right set of Dockerfiles and an example. PyTorch seems to be growing in popularity and this might be a good way to begin connecting our community with theirs.\r\n\r\nDistributed training and an associated operator is a much bigger investment. Supporting non-distributed PyTorch first might be a good way to gauge the interest in distributed training.\r\n", "createdAt": "2018-03-02T14:52:09Z"}}, {"node": {"author": {"__typename": "User", "login": "erikerlandson"}, "body": "@jlewi are you proposing an operator for standing up a non-distributed pytorch instance?", "createdAt": "2018-03-02T15:27:15Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@erikerlandson No. I think the motivation for a PyTorch operator is still unclear. I suspect non-distributed PyTorch covers a lot of use cases and we probably don't need an operator for that.", "createdAt": "2018-03-06T19:02:37Z"}}, {"node": {"author": {"__typename": "User", "login": "ddysher"}, "body": "is operator only scoped to distributed environment?  being able to manage a fleet of machines uniformly for admins, and a consistent interface for developers also sounds like a pro for us?", "createdAt": "2018-03-07T01:56:22Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@ddysher An operator could make sense for other use cases. For example, Argo and Seldon Core are both operators/custom resources.\r\n\r\nCan you provide more information about the use case you are describing?", "createdAt": "2018-03-08T14:33:31Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@ddysher @erikerlandson I believe there is a K8s project coming out soon called kube-builder that is also supposed to solve the problem of making it easy to write APISever extensions and CRD.\r\n\r\nI think they are just trying to figure out where to publish the code\r\nhttps://groups.google.com//forum/#!topic/kubernetes-sig-api-machinery/xJnn062qF8E", "createdAt": "2018-03-08T14:45:55Z"}}, {"node": {"author": {"__typename": "User", "login": "erikerlandson"}, "body": "@jlewi sounds like it is getting good community buy-in.\r\n\r\nI'm a little confused by what it means to be forking an entire incubator project, and then finding a new home for it.  Does that mean `kubernetes-incubator/apiserver-builder` is being obsoleted?", "createdAt": "2018-03-08T14:55:39Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@erikerlandson Don't know.\r\nLooks like its been published here:\r\nhttps://github.com/kubernetes-sigs/kubebuilder\r\n", "createdAt": "2018-03-20T13:53:37Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "The repo for pytorch has been created:\r\nhttps://github.com/kubeflow/pytorch-operator\r\n\r\nClosing this issue.", "createdAt": "2018-03-20T13:54:13Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Sync common labels to every repository", "body": "#12 defined common labels.\r\n\r\nNow we want to automate the application of all those labels across our repositories.\r\n\r\nKubernetes uses this tool.\r\nhttps://github.com/kubernetes/test-infra/tree/master/label_sync", "comments": {"totalCount": 23, "edges": [{"node": {"author": {"__typename": "User", "login": "kunmingg"}, "body": "@jlewi all reops except:\r\n```\r\n--skip=kubeflow/kubeflow,kubeflow/tf-operator,kubeflow/testing,kubeflow/example-seldon,kubeflow/experimental-kvc,kubeflow/website\r\n```\r\nThe sync cron job start since last Thursday.", "createdAt": "2018-04-16T17:03:02Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "So the remaining repos are\r\n\r\n- kubeflow/kubeflow\r\n- kubeflow/tf-operator\r\n- kubeflow/testing\r\n- kubeflow/example-seldon\r\n- kubeflow/experimental-kvc\r\n- kubeflow/website\r\n\r\n@kunmingg all of the following repos should be writable by the cibots\r\n- kubeflow/testing\r\n- kubeflow/example-seldon\r\n- kubeflow/experimental-kvc\r\n- kubeflow/website\r\n\r\nLets enable the label sync on those repos so the only remaining repos are\r\n- kubeflow/kubeflow\r\n- kubeflow/tf-operator\r\n", "createdAt": "2018-04-19T00:32:06Z"}}, {"node": {"author": {"__typename": "User", "login": "kunmingg"}, "body": "@jlewi Currently bot doesn't have write access to \r\n```\r\nkubeflow/testing\r\nkubeflow/example-seldon\r\nkubeflow/experimental-kvc\r\nkubeflow/website\r\n```\r\nNeed to update permission.", "createdAt": "2018-04-19T00:43:30Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I checked \r\n\r\nkubeflow/testing had read access; changed it to write\r\n\r\nThe ci-bots for the following repos already look like they have write access\r\nkubeflow/example-seldon\r\nkubeflow/experimental-kvc\r\nkubeflow/website\r\n\r\nIs the script returning errors?\r\nCan you try rerunning it?\r\n\r\n", "createdAt": "2018-04-19T13:13:03Z"}}, {"node": {"author": {"__typename": "User", "login": "kunmingg"}, "body": "You are right, now bot can edit those 4 repos. \r\nCronjob now start to include these 4 repos, and will execute every 4 hours.", "createdAt": "2018-04-19T18:18:48Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@kunmingg Everything looking good? If so lets enable label sync on the remaining repositories.", "createdAt": "2018-04-23T12:06:51Z"}}, {"node": {"author": {"__typename": "User", "login": "kunmingg"}, "body": "@jlewi looks good, please go ahead.", "createdAt": "2018-04-23T16:33:56Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "ci-bots should now have write access to kubeflow/kubeflow and kubeflow/tf-operator.\r\n\r\n/cc @kunmingg ", "createdAt": "2018-04-23T23:37:08Z"}}, {"node": {"author": {"__typename": "User", "login": "kunmingg"}, "body": "@jlewi cronjob updated to take care all repos.\r\nI assume ci-bots should automatically have access to any newly created repos?", "createdAt": "2018-04-24T22:56:52Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@kunmingg yes.", "createdAt": "2018-04-27T04:19:57Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Setup Prow PR Dashboard", "body": "The PR dashboard is a tool in prow that helps people manage their incoming/outgoing PRs.\r\n\r\nWe should look into setting this up for Kubeflow\r\nhttps://github.com/kubernetes/test-infra/tree/master/gubernator#adding-a-repository-to-the-pr-dashboard\r\n\r\nIt looks like its straightforward. We just need to configure a webhook.\r\n\r\nSee here:\r\nhttps://github.com/kubernetes/community/blob/master/contributors/guide/owners.md#quirks-of-the-process\r\n", "comments": {"totalCount": 1, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I enabled the webhook for the Kubeflow org.\r\nThis is working and the PR dashboard is available at.\r\nhttps://k8s-gubernator.appspot.com/pr", "createdAt": "2018-03-03T19:46:30Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Do we need the status check \"require branches to be up to date before merging\"", "body": "We currently use the status check \"Require branches to be up to date before merging\"\r\n\r\nI think this pretty much means as soon as one PR for a repository is merged every other PR for the repo needs to be resync'd.\r\n\r\nThis seems impractical and a major pain point.\r\n\r\nI think we can probably drop this.\r\n\r\nI'm guessing that if tide tries to merge a PR and there are conflicts it will fail?\r\n\r\nI think the downside of disabling this check is that presubmits aren't testing the merged code so presubmits could pass but postsubmits could fail.\r\n\r\nThe constant rebasing seems like a major drag on velocity so I think we should get rid of it.\r\n\r\ntide will rerun the presubmits. I wonder if there's a way when tide reruns the test to run the tests on the merged code.\r\n\r\nWhat do others think?\r\n\r\n/cc @BenTheElder @krzyzacy @DjangoPeng @ddysher ", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I disabled the check on kubeflow/kubeflow\r\nConsider it an experiment.", "createdAt": "2018-03-03T19:45:45Z"}}, {"node": {"author": {"__typename": "User", "login": "BenTheElder"}, "body": "> I'm guessing that if tide tries to merge a PR and there are conflicts it will fail?\r\n\r\n*our* presubmits always merge PRs into master locally when testing, and tide / prow should be aware of the commits supplied to the test jobs -- AFAIK we only merge if the latest commits were tested, but this does rely on your Prow jobs actually testing ht right commits.", "createdAt": "2018-03-05T00:56:20Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "List participants", "body": "We should have a page that lists all the companies/organization that are participating and contributing to Kubeflow.\r\n\r\nHere's an initial list\r\n\r\nCaiCloud,\r\nCanonical, \r\nCoreOS, \r\nGoogle, \r\nProject Jupyter, \r\nRed Hat, \r\nSeldon, \r\nWeave,\r\n\r\n/assign @aronchick ", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "http://stackalytics.com/?project_type=kubernetes-group&release=all&metric=commits\r\n\r\nI think https://github.com/openstack/stackalytics is a good reference.\r\n\r\nAnd https://github.com/cncf/devstats is also helpful.", "createdAt": "2018-03-04T01:39:53Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "We have the member list in YAML, then could we close the issue?", "createdAt": "2018-05-12T02:55:08Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Document Repository Setup", "body": "Now that we have multiple repositories in the GitHub org we should standardize and document how repositories should be configured.\r\n\r\nBackground\r\nkubeflow/community#22\r\nkubeflow/tf-operator#433\r\n\r\nSome things to cover\r\n* Setting up Prow and basic tests\r\n* Per  kubeflow/community#22 we don't want GitHub to require pull request reviews because we will rely on prow and tide to merge PRs based on /lgtm & /approve\r\n* Reviewable should not be configured as a status check because this blocks tide (kubernetes/test-infra#7140)", "comments": {"totalCount": 7, "edges": [{"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think it should be in high priority since the docs in tf-operator is outdated and the users may be puzzled.", "createdAt": "2018-03-07T12:33:49Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@gaocegege Which docs? Why would users be affected by repository configuration?", "createdAt": "2018-03-07T15:55:32Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "@jlewi Not the config, I mean that the README in tf-operator is outdated. For example, we have no master now but the README is not updated. If we have docs repository we could put all docs in one repo and there is no consistency problem between different repos.", "createdAt": "2018-03-08T02:49:48Z"}}, {"node": {"author": {"__typename": "User", "login": "jose5918"}, "body": "I'll take this since I just started the process of setting up the PyTorch repo", "createdAt": "2018-03-14T23:49:07Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/assign @jose5918 ", "createdAt": "2018-03-20T13:15:08Z"}}, {"node": {"author": {"__typename": "User", "login": "jose5918"}, "body": "Still working on it https://github.com/kubeflow/testing/issues/72, but will finish documenting once I get through all the rough spots and actually have a fully set up repo.", "createdAt": "2018-03-20T18:26:31Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Some additional things we should document [here](https://github.com/kubeflow/community/issues/53#issuecomment-378329912)", "createdAt": "2018-04-04T11:28:07Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "erikerlandson"}, "title": "Consider integration for Lucid", "body": "A tracking issue to discuss the idea of some integration with Google's Lucid project for visualizing neural networks:\r\nhttps://opensource.googleblog.com/2018/03/the-building-blocks-of-interpretability.html\r\n", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "DevStats to track velocity for Kubeflow", "body": "Kubernetes has a great set of dashboards for velocity related metrics\r\nhttps://k8s.devstats.cncf.io/d/44/time-metrics?orgId=1&var-period=w&var-repogroup_name=Kubernetes&var-repogroup=kubernetes&var-apichange=All&var-size_name=All&var-size=all&var-full_name=Kubernetes\r\n\r\nThere are dashboards for things like\r\nPR time to LGTM\r\n# approvers/# reviewers\r\nhttps://k8s.devstats.cncf.io/d/38/reviewers?orgId=1\r\n\r\nIt would be great to get the same metrics for Kubeflow.", "comments": {"totalCount": 53, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "So it looks like the problem was that the dashboards are using [Grafana variables](http://docs.grafana.org/reference/templating/) whose value is supposed to be populated from influxdb. But when I imported the dashboards I must set the data source incorrectly because it was trying to read the data from the postgre data which didn't work as a result I was getting the error \"template variables could not be initialized\".\r\n\r\nI edited the dashboard via the UI and that fixed things.\r\n\r\nNow I just need to figure out how to load all the json files defining the dashboards into Grafana.", "createdAt": "2018-04-20T03:59:09Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@jberkus @lukaszgryglicki Is there a script I can use to create dashboards from all the json files in a directory? If the dashboards already exist I'd like them to be overwriten.", "createdAt": "2018-04-20T04:00:28Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "See grafana/grafana#10052\r\n\r\nLooks like we can configure Grafana to load dashboards from a directory.", "createdAt": "2018-04-20T04:04:25Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Found some helpful [instructions](https://github.com/aerogear/proposals/blob/dac71073deaa442727c4989f028a15e66aee88f1/metrics/prometheus-metrics-endpoints-and-auto-discovery.md#default-visualisations) about how to configure Grafana to load dashboards from files in conjuction with a config map.", "createdAt": "2018-04-20T04:15:58Z"}}, {"node": {"author": {"__typename": "User", "login": "lukaszgryglicki"}, "body": "In my case, I was copying grafana.db file from the test server to another server.\r\nAnd then I could update dashboards using `cmd/sqlitedb` tool.\r\nSee scripts: in `devel/*sqlite*`\r\nUnfortunately, `sqlitedb` tool cannot import new JSONs atm, it only supports updating.\r\nI'll try to add such a feature.\r\n\r\nPostgres variables are created by `pdb_vars` tool (see `devel/pdb_vars_all.sh`), Influx variables are created by `idb_vars` tool (see `devel/idb_vars_all.sh`), they both have yaml configuration in pdb.yaml/idb_vars.yaml.\r\n", "createdAt": "2018-04-20T05:46:24Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Thanks.  I ended up configuring Grafana to load dashaboards from files. I store the dashboards in a config map so its super easy to update them (just ks apply).\r\n\r\n/cc @jberkus ", "createdAt": "2018-04-20T13:13:12Z"}}, {"node": {"author": {"__typename": "User", "login": "lukaszgryglicki"}, "body": "OK great.", "createdAt": "2018-04-20T15:26:56Z"}}, {"node": {"author": {"__typename": "User", "login": "ant31"}, "body": "@jlewi have deployed devstat on k8s? is there any resources/source code to re-use of your deployment ?", "createdAt": "2018-11-13T11:54:30Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "@ant31 I think you can find the artifacts here: https://github.com/kubeflow/community/tree/master/devstats", "createdAt": "2018-11-13T12:10:41Z"}}, {"node": {"author": {"__typename": "User", "login": "ant31"}, "body": "@gaocegege  great, thanks ! ", "createdAt": "2018-11-13T12:31:46Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jose5918"}, "title": "Create kubeflow/experimental-pytorch", "body": "Based on this proposal https://github.com/kubeflow/community/pull/33, we would like to create a repository to start working/experimenting with a pytorch operator.", "comments": {"totalCount": 5, "edges": [{"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think we could create kubeflow/pytorch-operator, then we don't need to update the name of the repo in the future.\r\n\r\nWDYT", "createdAt": "2018-03-09T02:40:44Z"}}, {"node": {"author": {"__typename": "User", "login": "jose5918"}, "body": "Yeah either way sounds good to me. I just used this name for the issue because it was suggested on the proposal", "createdAt": "2018-03-09T17:47:54Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Created kubeflow/pytorch-operator.\r\n@jose5918 I gave you admin access so you should be able to set it up.\r\n\r\nCan you please set up the repo? As part of the repo can you create a doc covering the process of setting up a new repository kubeflow/community#31\r\n\r\nCan you also make it abundantly clear in the README.md that its an experimental repo.", "createdAt": "2018-03-09T18:57:07Z"}}, {"node": {"author": {"__typename": "User", "login": "jose5918"}, "body": "Sure I will do that and make sure people are aware it's experimental", "createdAt": "2018-03-09T22:08:30Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think we could close the issue now. We have pytorch-operator thanks to @jose5918 ", "createdAt": "2018-03-20T03:58:04Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "title": "[Repository Reuqest] Create kubeflow/caffe2-operator", "body": "We have a design proposal https://github.com/kubeflow/community/pull/41 for caffe2 support thanks to @carmark And he implemented a POC for the new operator. I think it is time to create the repo kubeflow/caffe2-operator and keep things going on simultaneously.\r\n\r\n/cc @jlewi \r\n\r\n@carmark Does the name work for you?", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "carmark"}, "body": "Yeah, that's great.", "createdAt": "2018-03-20T04:04:45Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I created the repository. \r\nI created the GitHub team caffe2-team and gave it write access.\r\n@carmark I sent you an invite to add you to the team. I'll make you a maintainer so you can add other people.\r\n\r\nI think we can close this issue after filing a separate issue to properly setup the caffe2-operator repository; see #31.", "createdAt": "2018-03-20T13:22:45Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "inc0"}, "title": "JupyterLab plugin for tf-operator", "body": "I'm looking at creating plugin to jupyterlab to communicate with underlying tf-operator and allow to easily manage running notebook-developed models in distributed tf.\r\n\r\nAnyone looked at this or have feedback? Pointers/ideas most welcome.", "comments": {"totalCount": 6, "edges": [{"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "Hi, I think it is an interesting idea! Could you explain more about it? And we are implementing the v1alpha2 API for tf-operator and I think you could use v1alpha2 directly.", "createdAt": "2018-03-22T06:18:42Z"}}, {"node": {"author": {"__typename": "User", "login": "inc0"}, "body": "Yeah I'll be aiming for v1alpha2. I'll start working on some PoC so we will have something to talk about:)", "createdAt": "2018-03-22T15:13:41Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "How would a plug-in differ from\r\n\r\n- A python client library\r\n- A CLI\r\n- The existing TFJobs Ui\r\n- Cell magic\r\n\r\nWhat's the motivation/value of coupling to Jupyter?\r\n", "createdAt": "2018-03-22T16:51:38Z"}}, {"node": {"author": {"__typename": "User", "login": "inc0"}, "body": "I was thinking of set of widgets to run what you develop in jupyter on distributed. With CLI you could export python code and run it, that's additional steps. I'd like to use fact that pods have access to underlying k8s so people will be able to spawn jobs etc with no additional configuration from their part. We can do something similar if we'd have CLI and use terminal in jupyter, and we'll have it anyway, but widgets would make nice shortcut for that.\r\n\r\nWhat's cell magic?:)", "createdAt": "2018-03-22T18:26:11Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Cell magic are \"%%\" and \"%\" commands in Jupyter\r\nhttps://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/", "createdAt": "2018-03-22T21:28:43Z"}}, {"node": {"author": {"__typename": "User", "login": "inc0"}, "body": "Ah that thing. So it's going to be less about cells and display and more about control of underlying infra. ", "createdAt": "2018-03-23T17:18:25Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Spartakus metrics include Kubeflow version information", "body": "We should include information about which version of Kubeflow is deployed", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "mhausenblas"}, "body": "Agreed and please assign this issue to me @jlewi ", "createdAt": "2018-04-06T05:59:44Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/assign @mhausenblas ", "createdAt": "2018-04-06T06:18:30Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Create dashboard of ksonnet registry clones", "body": "Every time someone creates a ksonnet app that uses our GitHub registry they issue a GitHub request to pull down our components.\r\n\r\nThis would be a great metric to collect since it would provide a number of the ksonnet apps using our registry.\r\n\r\nDoes GitHub expose these metrics?\r\n\r\n/cc @chrisheecho ", "comments": {"totalCount": 9, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Looks like this data is available here\r\nhttps://github.com/kubeflow/kubeflow/graphs/traffic\r\n\r\nWhich has a bunch of useful information.", "createdAt": "2018-03-26T16:52:55Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/assign @chrisheecho ", "createdAt": "2018-04-02T18:39:21Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@chrisheecho Did you have a chance to look into this? Do you think we will get this done this week?", "createdAt": "2018-04-09T17:11:28Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@chrisheecho Any progress on this?", "createdAt": "2018-04-13T18:16:34Z"}}, {"node": {"author": {"__typename": "User", "login": "chrisheecho"}, "body": "have not had a chance to look at this please leave it with me for next sprint.\r\n\r\nOn a separate note do you need to be an owner to review this link? https://github.com/kubeflow/kubeflow/graphs/traffic I just get routed to the regular list of repo page. Perhaps I have permission issues here?", "createdAt": "2018-04-16T13:59:43Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Not sure what the permission model is. Is the traffic data accessible via API? The dashboard only shows me a couple ~2 weeks of data.", "createdAt": "2018-04-16T17:14:35Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "https://developer.github.com/v3/repos/traffic/\r\n\r\nLooks like it only provides last 14 days. Might be good to sync it to a database (BigQuery) so we can preserve longer times. I wonder if someone has already written such a sync.", "createdAt": "2018-04-16T17:16:11Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I thought about this more the fact that the number of unique cloners is approximately 30 per day seems suspiciously high to me.\r\n\r\nI think most of this is coming from our test infrastructure via [checkoust.sh](https://github.com/kubeflow/testing/blob/master/images/checkout.sh#L25)\r\n\r\ni.e. our CI system clones the source via https. I thought we were using GITHUB_ID which would have dedupped the clones.\r\n\r\nI wonder if we can switch to using ssh and using a bot so that all of our test clones will be counted as one user.\r\n\r\nWe should also double check that whatever ksonnet does to pull the data counts as a clone.", "createdAt": "2018-04-20T00:37:31Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "The bootstrapper will also undercut these metrics since we plan on baking in the repo into the bootstraper. \r\nOf course we should be able to measure bootstraper image pulls.", "createdAt": "2018-04-20T00:38:31Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Go Program to manage membership in Google Groups base don YAML file", "body": "A lot of our test/release infrastructure uses GCP in the kubeflow.org domain.\r\n\r\nRight now we use a variety of Google groups to maintain ACLs. This doesn't provide a lot of visibility or auditability into who has what permissions.\r\n\r\nIt might be nice if ACLs could be maintained in GitHub and then sync'd to Google Cloud Directory sync\r\nhttps://support.google.com/a/answer/106368\r\n\r\nto assign various permissions (e.g. access to test infrastructure).\r\n\r\nOne concern would be protecting the GitHub repository to make sure compromising the repository couldn't compromise our release infrastructure. \r\n\r\nWe could potentially build safe guards into the sync; e.g. only ids corresponding to certain trusted orgs could be granted certain permissions.", "comments": {"totalCount": 8, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@fejta FYI", "createdAt": "2018-04-05T21:36:10Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Managing everyone's membership in the corresponding Google Groups is becoming a real blocker.\r\n\r\nIt would be great to make progress on this by having a simple go program that does the following\r\n\r\n1. Read a YAML file that lists google groups and for each group a list of members\r\n1. Use the [Google Groups API](https://developers.google.com/admin-sdk/directory/v1/reference/members/insert) to add/remove members\r\n\r\nThis would allow us to manage members via code review.", "createdAt": "2018-04-19T13:53:44Z"}}, {"node": {"author": {"__typename": "User", "login": "kkasravi"}, "body": "@jlewi could this be in scope for a delegation phase in bootstrapper? After the cluster roles are defined and the auth provider is configured then the org/group/members are bound. When creating kubeflow.org we would define a yaml that would be part of the org/group/member phase. Thoughts? I could pick this up and do the simple implementation - but also integrate into the delegation pipeline. Thoughts?", "createdAt": "2018-04-19T19:44:18Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@kkasravi This isn't for use by Kubeflow users. This is solely for use by us to manage our test and release infrastructure; so it shouldn't be part of the bootstrapper.", "createdAt": "2018-04-20T03:10:05Z"}}, {"node": {"author": {"__typename": "User", "login": "kkasravi"}, "body": "@jlewi ok - got it. So read from member_organizations.yaml, members.yaml and update groups -> members in the kubeflow.org domain via https://developers.google.com/admin-sdk/directory/v1/guides/manage-group-members", "createdAt": "2018-04-20T15:24:44Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Pretty much. Although we might want to create a new file groups.yaml that\ndescribes various groups and their members\n\nOn Fri, Apr 20, 2018, 8:24 AM Kam Kasravi <notifications@github.com> wrote:\n\n> @jlewi <https://github.com/jlewi> ok - got it. So read from\n> member_organizations.yaml, members.yaml and update groups -> members in the\n> kubeflow.org domain via\n> https://developers.google.com/admin-sdk/directory/v1/guides/manage-group-members\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/kubeflow/community/issues/49#issuecomment-383131928>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAvcAxXf8rqeZ8xPi2_qVgtEJzzRLyI-ks5tqf28gaJpZM4S_BdC>\n> .\n>\n", "createdAt": "2018-04-24T13:21:53Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Created repository internal-acls; because I want to start reducing the toil of managing different Kubeflow google groups and we can use the **gam** command line tool to start improving things.", "createdAt": "2018-05-23T17:55:12Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Duplicate of #55 \r\n", "createdAt": "2018-11-17T01:19:16Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "elsonrodriguez"}, "title": "[Repository Request] `experimental-beagle`: A CRD-based experiment tracking API", "body": "We'd like to work on a POC for a k8s-native experiment tracking system, and need a repository to house the work.", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Created the repository.\r\n\r\nIntel has write access.", "createdAt": "2018-03-29T21:21:57Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I am closing the issue since it is created.", "createdAt": "2018-05-22T10:38:28Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Bulk relabel issues to move between projects", "body": "It would be convenient if we had a way to bulk relabel issues.\r\n\r\nExample: Move all remaining open issues in 0.1 project into the 0.2 project.\r\n\r\nWe should be able to create a script to do this pretty easily using the GitHub API.", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "YujiOshima"}, "title": "[Repository Reuqest] Create kubeflow/hyperparameter-tuning", "body": "We have been discussing hyperparameter tuning https://github.com/kubeflow/tf-operator/issues/112 .\r\nI have developed a parameter tuning system integrated with kubernetes [here](https://github.com/mlkube/katib).\r\nTo improve it and more integrate with kubeflow with the community, I would like to host this code under kubeflow.\r\n/cc @jlewi @gaocegege ", "comments": {"totalCount": 14, "edges": [{"node": {"author": {"__typename": "User", "login": "YujiOshima"}, "body": "And I will close this issue when the setup is completed.", "createdAt": "2018-04-03T17:33:33Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Great thank you.", "createdAt": "2018-04-03T19:41:14Z"}}, {"node": {"author": {"__typename": "User", "login": "ddysher"}, "body": "The repository is named \"hp-tunning\" but the system is named \"katib\", should we rename the repository name to katib?\r\n\r\n@YujiOshima @jlewi ", "createdAt": "2018-04-16T06:47:01Z"}}, {"node": {"author": {"__typename": "User", "login": "YujiOshima"}, "body": "@ddysher I agree.  \r\n@jlewi WDYT?", "createdAt": "2018-04-16T07:23:45Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think katib is a good name for the repo. And we could add hyperparameter tuning as a label for the repo.", "createdAt": "2018-04-16T13:05:33Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "SGTM. Should we consider it decided?", "createdAt": "2018-04-19T17:01:11Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@YujiOshima You're the leading developer of katib and its your contribution; so I suggest you make the final decision.", "createdAt": "2018-04-19T17:01:42Z"}}, {"node": {"author": {"__typename": "User", "login": "YujiOshima"}, "body": "Thank you @jlewi . \r\nOfcource, I like the name. Let's rename the repo to katib.", "createdAt": "2018-04-19T17:32:27Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Done.\r\n\r\nIs there any more work to be done for the issue or can we close it?", "createdAt": "2018-04-19T18:56:37Z"}}, {"node": {"author": {"__typename": "User", "login": "YujiOshima"}, "body": "Thank you!\r\nI think setting up repository has been completed.\r\nWe can close this issue.", "createdAt": "2018-04-19T23:52:13Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Use peribolos(prow/source contro)l to manage Kubeflow org members", "body": "It would be great if we could manage Kubeflow org members using a file checked into source control as the source of truth. So adding a member would go through no more code review process and not require\r\nany elevated permissions.\r\n\r\nWe could then have a bot which would automatically sync that list using the GitHub API.\r\nhttps://developer.github.com/v3/orgs/members/#add-or-update-organization-membership\r\n\r\nI wonder if Kubernetes has any plans to do this?", "comments": {"totalCount": 8, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@fejta mentioned he's been thinking about this.\r\n\r\n/cc @BenTheElder @cjwagner ", "createdAt": "2018-04-05T21:35:07Z"}}, {"node": {"author": {"__typename": "User", "login": "BenTheElder"}, "body": "adding from the discussion that we're quite interested in this but don't have anything yet, @fejta is drafting a proposal", "createdAt": "2018-04-05T22:15:15Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "If anyone wanted to take a crack at this I think a simple POC would be a go program that\r\n\r\n1. Lists ORG members via GitHub API\r\n1. Compares list to members in YAML file\r\n1. Makes GitHub API requests to send invites.\r\n\r\nWould be fairly easy to run that as a cron job and that would make administering Kubeflow much easier.", "createdAt": "2018-04-10T16:55:53Z"}}, {"node": {"author": {"__typename": "User", "login": "fejta"}, "body": "I would like this to be part of prow and to extend https://docs.google.com/document/d/1pFBfpZKUWlEbWBOdUpJLDF9Arg2rSvNSQQi6zhuHVb4/edit to support this (join https://groups.google.com/forum/#!forum/kubernetes-dev for access)", "createdAt": "2018-04-10T22:57:46Z"}}, {"node": {"author": {"__typename": "User", "login": "fejta"}, "body": "RFC: https://docs.google.com/document/d/18Kw8InxYk4OF14iTXXfvD2oy3AuoDxfqAmtvf6NbwBI/edit?usp=sharing", "createdAt": "2018-05-04T08:22:34Z"}}, {"node": {"author": {"__typename": "User", "login": "fejta"}, "body": "FYI this work is in progress:\r\n* https://github.com/kubernetes/test-infra/pull/8187\r\n* https://github.com/kubernetes/test-infra/tree/master/prow/cmd/peribolos", "createdAt": "2018-06-01T00:18:49Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Looks like this is now supported in prow:\r\nhttps://github.com/kubernetes/test-infra/tree/master/prow/cmd/peribolos#peribolos-documentation", "createdAt": "2018-09-28T14:12:32Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "kubeflow/internal-acls#20 will check in an initial config. We could start using that and running the perobolous command manually but I'm hitting a segfault running it in dry run mode.\r\nkubernetes/test-infra#10186\r\n\r\nOnce that's done we need to setup a trusted cluster and prow job to apply the sync automatically\r\n\r\nSomewhere in your own org is probably a better bet, but the more important part is determining where the job will run and what credentials it has. \r\n\r\n> Once the org-config is modified and merged, it still requires the admin to manually run a command to ask the bot to sync the config/org setting.\r\n\r\nWe actually apply the config automatically as soon as the PR to update the config merges! https://testgrid.k8s.io/sig-testing-org#post-peribolos\r\nThis works via a postsubmit prow job\r\n\r\nhttps://github.com/kubernetes/test-infra/blob/master/config/jobs/kubernetes/test-infra/test-infra-trusted.yaml#L3-L24\r\n\r\n We also run a periodic job nightly to apply the config in case any users make manual changes.\r\n\r\n\r\n> we can just have our config live in their repo...\r\n\r\nYour config should live in it's own repo.\r\n\r\nWe run this job in a special cluster for jobs we trust and control, which have access to more creds than untrusted jobs. If you want to use this pattern you'll need to create a cluster for this purpose and work with us to follow the linked instructions. \r\n\r\nThis will also require creating a bot that is an admin of the org, and putting creds for that bot in a secret in your cluster.\r\n\u2026", "createdAt": "2018-11-20T06:28:58Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "ewilderj"}, "title": "Create web site repo and team", "body": "Could we set up a repo `website` for the Kubeflow web site, and accompanying team on Github to coordinate around it. Myself and @nickchase would happily act as admins on this.\r\n\r\nref #21 \r\n", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "inc0"}, "body": "/me raises hand to join!", "createdAt": "2018-04-05T16:10:25Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I created the repository. Edd I made you and Admin.\r\nYou should create an owners file so that Prow can handle issues.\r\n\r\nAre you sure @nickchase is the right id? Doesn't look like he's a member of the org.\r\n\r\nI didn't create a GitHub team because  access to the repo can be administered via the OWNERs files.", "createdAt": "2018-04-06T06:14:31Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Create CSV/Yaml directory in kubeflow/community", "body": "I propose we use a csv file in kubeflow/community to list \r\n  - First Name\r\n  - Last Name\r\n  - GitHub id\r\n  - Slack Id\r\n  - Email (preferably corporate)\r\n\r\nThis would be entirely opt-in and users could provide a subset of information.\r\n\r\nI think this would serve two benefits\r\n  - Short term help folks map user ids across different systems\r\n  - Eventually be used to manage other permissions (e.g. membership in the GitHub org) e.g #49 and access to our release/test infrastructure (#55).\r\n\r\nThis would  ultimately allow us to use the normal code review process to manage permissions. I think this will be necessary as we continue to grow as a community.", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "ewilderj"}, "body": "Maybe company name as well?", "createdAt": "2018-04-06T16:56:08Z"}}, {"node": {"author": {"__typename": "User", "login": "aronchick"}, "body": "WFM!", "createdAt": "2018-04-06T19:51:16Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "ewilderj"}, "title": "Slack channels not being archived", "body": "Until we're in a foundation, paying for Slack is too expensive, so we're currently losing the ability to search all of our history.\r\n\r\nAll the public archiving options (slackarchive.io, Slark) are not maintained any more.\r\n\r\nSolutions include: transition to a FOSS solution such as Rocket Chat, write a bot to archive and provide search facilities (there are some ones that exist, but we'd need a volunteer to operate it.)\r\n\r\n", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "Do we have a plan to be in a foundation?", "createdAt": "2018-05-12T02:54:29Z"}}, {"node": {"author": {"__typename": "User", "login": "ewilderj"}, "body": "Yes, the project intends to be hosted in a foundation. However, two things are not yet clear: the timing, and which foundation. If you go too soon, the bureaucracy can slow progress down. The \"which\" is a bit clearer: many people favor the CNCF, but there ought to be community consensus about what makes sense. Feel free to talk to Aronchick or Jeremy to get more detail.\r\n\r\nTo the topic of this bug: For now, we just decided to live with this problem. The archives are not lost, just in accessible. They will be available if we move to a paid Slack plan, or if we decide to export our history into something like Rocket.Chat.\r\n", "createdAt": "2018-05-14T15:17:16Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Spartakus metrics; histogram of Kubeflow deployment age", "body": "Our spartakus metrics give us daily pings from each Kubeflow deployment that opted in.\r\n\r\nCurrently we plot the number of unique pings per day. I'd like to get a break down of the age of each cluster on a given day. We should be able to compute this by looking at the elapsed time since the first ping for a given UUID. \r\n\r\nIt would be great if we could plot this as a stacked bar graph so we could get a histogram of the age of Kubeflow deployments on a given day.\r\n\r\nWe should be able to do this either via SQL queries or by writing an Apache Beam job to compute the appropriate data.\r\n\r\n/cc @chrisheecho ", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "title": "[memebers] Keep sorted by company name", "body": "We have comments about the order in [members.yaml](https://github.com/kubeflow/community/blob/master/members.yaml#L5) but not in member_organizations.yaml.", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "DjangoPeng"}, "title": "Do we have a interest in LF Deep Learning Foundation", "body": "As we all know, *Kubeflow is an open, community driven project to make it easy to deploy and manage an ML stack on Kubernetes.*\r\n\r\nActually, it's an organic combination of ML and Cloud-native community. Recently [the Linux Foundation launches a Deep Learning Foundation](https://techcrunch.com/2018/03/26/the-linux-foundation-launches-a-deep-learning-foundation/).\r\n\r\nI think it's open to discuss do we have a plan or interest in LF DLF? \r\n\r\nWDYT @jlewi @gaocegege @ddysher ", "comments": {"totalCount": 5, "edges": [{"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think it is a good place for kubeflow, but I am not sure if the community wants to be a member of one foundation.", "createdAt": "2018-04-18T14:45:22Z"}}, {"node": {"author": {"__typename": "User", "login": "ddysher"}, "body": "I thought the original plan is to work with CNCF?\r\n\r\n/cc @aronchick ", "createdAt": "2018-04-18T14:51:12Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I don't think we've put much thought into the particular organization we should join. I think its TBD by the community.", "createdAt": "2018-04-19T13:14:41Z"}}, {"node": {"author": {"__typename": "User", "login": "bhack"}, "body": "In CNCF FAQ i read:\r\n> The Linux Foundation is the parent of CNCF. We are one of the LF\u2019s largest sub-foundations\r\n\r\nSo LF is also the parent of DLF.\r\n\r\nAs ML/DL and K8s project we could be the grandchildren of LF :wink: ", "createdAt": "2018-05-14T21:04:21Z"}}, {"node": {"author": {"__typename": "User", "login": "bhack"}, "body": "https://www.linuxfoundation.org/blog/lf-deep-learning-foundation-announces-project-contribution-process/", "createdAt": "2018-06-18T23:17:12Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[Devstats] periodically update the gha_repos table to pick up new repositories", "body": "See this [comment in #34](https://github.com/kubeflow/community/issues/34#issuecomment-382911861) \r\n\r\nDatabase gha has a table gha_repos that has a list of all the Kubeflow repos. This table is used by various dashboards to group metrics.\r\n\r\nWe need to run this query periodically (e.g. cron job) to keep the table updated as new repositories are created in the org.\r\n\r\ndevstats has the binary runq.\r\nWe should just create .sql file to run it.\r\n", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[Devstats] Figure out how to expose the dashboards publicly", "body": "In #34 we set up cncf/devstats.  We should expose them publicly so that everyone can see them.\r\n\r\nI think to do that we need to\r\n\r\n1. enable anonymous access\r\n1. Change the admin account so we don't use username and password and check in the password into source control\r\n    It supports OAuth so that might be one solution; although that might entail also setting up https.", "comments": {"totalCount": 8, "edges": [{"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "Could we just create a nodeport service for the Grafana?", "createdAt": "2018-04-20T13:27:15Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I don't think the problem is setting up ingress to make the service accessible from outside the cluster. I think the problem is how to do that while only giving read only permissions to users. Right now I think if we expose it publicly anyone who knew the admin account and password would be able to login as admin and change things.\r\n\r\nRight now we are still using the default admin account and password and checking it into source control as part of our ksonnet app. We could change that and make it a secret. \r\n\r\nBut Grafana supports OAuth login and can use GitHub or Google. So I lean towards turning on OAuth using GitHub and getting rid of basic auth. \r\n\r\nAt which point I think we can make Grafana available for anonymous access.\r\n\r\n@lukaszgryglicki what do you do for k8s.devstats.cncf.io?", "createdAt": "2018-04-20T15:14:16Z"}}, {"node": {"author": {"__typename": "User", "login": "lukaszgryglicki"}, "body": "All our projects allow anonymous access (read-only).\r\nThere is an admin user that I can use, but it's not available outside.\r\n", "createdAt": "2018-04-20T15:29:13Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@lukaszgryglicki How do you prevent the admin user from being accessible outside?", "createdAt": "2018-04-21T00:05:45Z"}}, {"node": {"author": {"__typename": "User", "login": "lukaszgryglicki"}, "body": "Every script in deploy/* requires passing at least two env variables:\r\nPostgres password: PG_PASS=...\r\nInflux pass: IDB_PASS=...\r\nThere are more *_PASS variables used in some cases, for example for `ro_user` or `devstats_team`.\r\n\r\nOhhh you probably mean Grafana.\r\nThis is done manually, unfortunately :(\r\n\r\nBut I remember that Grafana docker image (not used by devstats) supports setting password via env...", "createdAt": "2018-04-21T04:39:12Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@lukaszgryglicki thanks that matches my understaning . Basically, you secure grafana by ensuring the admin account for grafana is secured so that anonymous users can't access it.\r\n\r\n", "createdAt": "2018-04-23T16:23:53Z"}}, {"node": {"author": {"__typename": "User", "login": "lukaszgryglicki"}, "body": "In our case admin user is password protected and we *want* anonymous read only access - so everybody can see dahsboards, even edit them, but cannot save.\r\n", "createdAt": "2018-04-23T16:50:25Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Thanks. I think we could do something similar.\r\n\r\nSpecifically\r\n\r\n1. Create a strong password and store it in a secret.\r\n1. Set the admin password via environment variable from the secret\r\n1. Enable anonymous access.", "createdAt": "2018-04-26T12:20:41Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[Devstats] Stats about reviewers; #LGTMs, #Reviews, #approves", "body": "See #34 \r\n\r\nWe'd like dashboards to show thinks like # of prs reviewed/approved by different reviewers and eventually participating organizations.\r\n\r\nWe need these stats because spreading the review workload around is going to be critical to our velocity.\r\n\r\nWe are working on using cncf/devstats and some of the initial dashboards that we copied from Kubernetes should provide some of these metrics. But right now these dashboards don't appear to be working (the results don't look correct if there are any). \r\n\r\nSo opening this issue to track.", "comments": {"totalCount": 5, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Table: \"Approvers in repository groups\" currently shows no data.", "createdAt": "2018-04-26T13:36:08Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "It looks like this is using using the influx db series approvers_hist.* but I see no such series in our influx db.", "createdAt": "2018-04-26T13:45:51Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "It seems like this postgre [query](https://github.com/cncf/devstats/blob/20b982a52f4f78384d5ffb68db80d609fe724504/metrics/kubernetes/hist_approvers.sql) might be responsible for creating a postgre table with matching approve events.", "createdAt": "2018-04-26T13:50:14Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Dashboard \"User reviews repository groups\" only shows reviews by 0olwzo0\t", "createdAt": "2018-04-26T13:51:49Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "More reviewers are showing up now.", "createdAt": "2018-08-29T03:45:19Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[Devstats] Add markdown explanations for dashboards", "body": "See this [comment](https://github.com/cncf/devstats/issues/74#issuecomment-373028565).\r\n\r\nIts possible to define markdown docs and then include those markdown docs in the Grafana dashboards. We should create markdown docs to provide dashboards that need explanation.\r\n\r\nFor example, on project statics table we should provide a definition of how contributor is defined. (Possibly by linking to the SQL query).", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Create repository kubebench for benchmarking", "body": "See kubeflow/kubeflow#708\r\n\r\nCreating an issue here since we use community for new repositories.", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I created the repository.\r\n\r\nI gave the ci-bots and cisco team write access.", "createdAt": "2018-04-23T22:28:10Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Lets use this issue to continue tracking setting up the repository.\r\n\r\n[instructions](https://github.com/kubeflow/community/blob/master/repository-setup.md)\r\n\r\n/assign ddutta", "createdAt": "2018-04-23T22:29:07Z"}}, {"node": {"author": {"__typename": "User", "login": "ddutta"}, "body": "Thx @jlewi ", "createdAt": "2018-04-23T22:57:56Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "yixinshi"}, "title": "Create repository batch-predict", "body": "We need a repo for the batch predict related code for Kubeflow from Google. See\r\nhttps://github.com/kubeflow/kubeflow/issues/662", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "yixinshi"}, "body": "/assign jlewi", "createdAt": "2018-04-26T00:52:59Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Repository created.\r\n\r\nI added ci-bots core-approvers and @yixinshi \r\n\r\nPlease follow \r\nhttps://github.com/kubeflow/community/blob/master/repository-setup.md\r\n\r\nTo finish setting it up. In particular please enable automatic merging.", "createdAt": "2018-04-26T01:02:04Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/assign @yixinshi \r\n/unassign @jlewi", "createdAt": "2018-04-26T01:04:46Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[devstats] Enable https for grafana", "body": "We should serve grafana over https not http.\r\n\r\nThis is important for admin logins since we currently use basic auth.\r\n\r\nRelated to #106", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "devstats for grafana are available at \r\n\r\nhttp://devstats.kubeflow.dev/\r\n\r\nIt looks like chrome  (at least for me) always wants to use https", "createdAt": "2018-05-01T00:51:04Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "It works for me on Edge/Windows", "createdAt": "2018-05-01T03:51:48Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "elsonrodriguez"}, "title": "Delete repository `experimental-beagle`", "body": "We won't be using it after all.", "comments": {"totalCount": 1, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Deleted.", "createdAt": "2018-05-08T16:19:22Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "title": "[devstats] Set companies", "body": "http://devstats.kubeflow.dev/d/9/companies-table?orgId=1\r\n\r\nNow we do not support the company related statistics. Maybe it requires some additional configuration.", "comments": {"totalCount": 15, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "#208 added a simple script that can use the github_users.json file and the data exported from devstats to compute # of PRs from different companies.\r\n\r\nHere's my fork of https://github.com/jlewi/gitdm\r\nI made some changes to compute github_users.json for Kubeflow.", "createdAt": "2018-11-13T10:59:29Z"}}, {"node": {"author": {"__typename": "User", "login": "amsaha"}, "body": "Following up on https://kubeflow.slack.com/archives/C8Q0QJYNB/p1542385363024300, what is pending? It seems that #208 is already merged. \r\n\r\n", "createdAt": "2018-11-17T05:06:46Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@amsaha I think we would like to get devstats updated so that it automatically and continuously computes PRs by companies.\r\n\r\nI suspect there's two things we need to do\r\n\r\n1. Figure out how to make devstats use github_users.json to compute PRs per company\r\n1. Figure out how to regularly update github_users.json ", "createdAt": "2018-11-19T13:15:02Z"}}, {"node": {"author": {"__typename": "User", "login": "amsaha"}, "body": "Thanks @jlewi. Will take a look soon.", "createdAt": "2018-11-21T12:06:26Z"}}, {"node": {"author": {"__typename": "User", "login": "gyliu513"}, "body": "@jlewi We have just enabled the dev stats by company at here http://stackalytics.com/?project_type=kubeflow-group&release=all&metric=commits", "createdAt": "2018-12-18T06:28:26Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "@gyliu513 Awesome work!\r\n\r\nBTW, I am not sure how to change the affiliation, in the dashboard, I am independent while I am not.\r\n\r\nhttp://stackalytics.com/?user_id=ce.gao%40outlook.com&project_type=kubeflow-group&release=all&company=%2aindependent&metric=commits", "createdAt": "2018-12-18T06:39:41Z"}}, {"node": {"author": {"__typename": "User", "login": "gyliu513"}, "body": "@gaocegege just create a review request to openstack like this https://review.openstack.org/#/c/625774/ , some detailed steps for how to create review request in openstack https://docs.openstack.org/infra/manual/developers.html \r\n\r\nOnce you add all of your emails to `openstack/stackalytics`, your name will appear in your affinity.", "createdAt": "2018-12-18T06:45:00Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@gyliu513 What's the advantage of using stackalytics over devstats? One of the advantages of devstats is that I think it gets the company directly from the GitHub profile which I think is preferable to asking everyone to submits PRs.", "createdAt": "2018-12-18T13:26:35Z"}}, {"node": {"author": {"__typename": "User", "login": "gyliu513"}, "body": "@jlewi if the pr was submitted with setting email as your company email, then there is no need to submit or to update. But if you are not using company email to create or, you may want to submit a pr to OpenStack to correct your affiliation.\r\n\r\nStakalytics is becoming an official website for open source contribution, like Kubernetes, Istio, knative etc, so it would be great for kubeflow as part of it, comments?", "createdAt": "2018-12-18T15:24:02Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "See comment\r\nhttps://github.com/kubeflow/community/issues/222#issuecomment-450881197", "createdAt": "2019-01-02T14:46:08Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Setup Cloud DNS for kubeflow.org", "body": "We want to switch to using GCP Cloud DNS to manage kubeflow.org. Currently we use Google Domains.\r\n\r\nCloud DNS is better for automatic management and controlling access.\r\n\r\nWe are using GCP project kubeflow-dns to manage our domains with Cloud DNS. I created a zone for kubeflow.org\r\n\r\n```\r\ngcloud dns managed-zones --project=kubeflow-dns create --dns-name=\"kubeflow.org\" --description=\"Zone for kubeflow.org\" \"kubefloworg\"\r\n```", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Created the following A-records to match our current Google domains config.\r\n\r\n```\r\ndev.kubeflow.org.               A     300    35.190.59.219\r\ngh-demo.kubeflow.org.           A     300    35.190.4.92\r\ngoogle-dev.kubeflow.org.        A     300    35.201.118.143\r\nkubecon-gh1.kubeflow.org.       A     300    35.186.240.109\r\nkubeflow-ci-argo.kubeflow.org.  A     300    35.190.53.122\r\nstats-collector.kubeflow.org.   A     300    35.227.201.82\r\ntesting-argo.kubeflow.org.      A     300    35.190.53.122\r\n\r\n```", "createdAt": "2018-05-08T00:13:53Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "This is setup.", "createdAt": "2018-05-11T13:02:53Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "ddutta"}, "title": "Edge ML use cases within Kubeflow", "body": "For some use cases check the recent talk from Kubecon https://www.youtube.com/watch?v=UR8N6mIAFlM&list=WL&index=3 ", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Serve devstats at devstats.kubeflow.org not devstats.kubeflow.dev", "body": "We should serve devstats @ kubeflow.org and not kubeflow.dev to be consistent. \r\n\r\nI can't remember why I initially picked kubeflow.dev. I think it was because I was experimenting with Cloud DNS and kubeflow.org wasn't administered by Cloud DNS @ the time.", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Interestingly, nslookup returns some incorrect results\r\n\r\n```\r\nnslookup devstats.kubeflow.org\r\nServer:\t\t127.0.0.1\r\nAddress:\t127.0.0.1#53\r\n\r\nNon-authoritative answer:\r\nName:\tdevstats.kubeflow.org\r\nAddress: 198.105.244.130\r\nName:\tdevstats.kubeflow.org\r\nAddress: 104.239.207.44\r\n```\r\n\r\nThe correct IP (the one used by devstats.kubeflow.dev is 35.190.42.248). I've created a DNS record in Cloud DNS for devstats.kubeflow.org. Just need to wait for it to propogate.\r\n", "createdAt": "2018-05-11T13:27:42Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Looks like devstats.kubeflow.org is now returning the correct address\r\n\r\n```\r\nnslookup devstats.kubeflow.org\r\nServer:\t\t127.0.0.1\r\nAddress:\t127.0.0.1#53\r\n\r\nNon-authoritative answer:\r\nName:\tdevstats.kubeflow.org\r\nAddress: 35.190.42.248\r\n```\r\nDeleting the record devstats.kubeflow.dev (it will just cause confusion over time).", "createdAt": "2018-05-11T13:29:01Z"}}, {"node": {"author": {"__typename": "User", "login": "lukaszgryglicki"}, "body": "DevStats can now be deployed on the Kubernetes cluster using helm chart, see this:\r\n- [helm chart](https://github.com/cncf/devstats/tree/master/devstats-helm) (please also see [this](https://github.com/cncf/devstats/blob/master/devstats-helm/templates/NOTES.txt)).\r\n- [kubernetes stuff](https://github.com/cncf/devstats/tree/master/k8s).\r\n\r\nIt uses [this script](https://github.com/cncf/devstats/blob/master/k8s/build_images.sh) to build 3 docker images: `lukaszgryglicki/devstats`, `lukaszgryglicki/devstats-minimal`, `lukaszgryglicki/devstats-grafana`.\r\n\r\nIt is also missing SSL/https and DNS (using `EKS` `LoadBalancer` deployment+service external name which defaults to something like [aws elb based name](http://a1ab28809433611e98f5602de9aa28f2-1477584054.us-west-2.elb.amazonaws.com:3000/)).", "createdAt": "2019-03-10T16:50:29Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[devstats] redirect http to https", "body": "We currently serve devstats.kubeflow.org at http and https (#130).\r\n\r\nWe would like all http traffic to automatically be redirected to https. We'd like to do this because users could potentially login into grafana and we don't want that to be over http.\r\n", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "vicaire"}, "title": "Repository for CRD that implements simple triggering/scheduling mechanisms on top of Argo workflows", "body": "I would like to contribute a CRD that implements simple triggering/scheduling mechanisms on top of Argo workflows. Would it be possible to create a repo for this?", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "What name do you want for the repo? pipelines?", "createdAt": "2018-05-11T23:21:41Z"}}, {"node": {"author": {"__typename": "User", "login": "vicaire"}, "body": "Sounds good. ", "createdAt": "2018-05-11T23:35:06Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I created the repository please follow instructions below to finish setting it up\r\nhttps://github.com/kubeflow/community/blob/master/repository-setup.md\r\n\r\n/assign @vicaire ", "createdAt": "2018-05-12T00:33:40Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Create labels for sprints ", "body": "It would be good to label issues by sprint. The problem we using projects and adding issues to columns is that when the issue is closed its moved off the sprint. So its hard to track which issues were in which sprint.\r\n\r\nWe should go ahead and define labels for the next couple sprints to\r\nhttps://github.com/kubeflow/testing/blob/master/label_sync/kubeflow_label.yml\r\n\r\ne.g.\r\n\r\nsprint/2018-05-14-to-05-25\r\nsprint/2018-05-29-to-06-08\r\n\r\n/assign @kunmingg \r\n", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Labels exist but I don't see the labels added to \r\nhttps://github.com/kubeflow/testing/tree/master/label_sync", "createdAt": "2018-05-29T12:49:43Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Fixed by #145", "createdAt": "2018-06-01T20:57:41Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Setup Cloud DNS records for gsuite", "body": "We switched our DNS from using Google Domains to Cloud DNS. This broke gmail for kubeflow.org because we are missing MX records.\r\n\r\nDoc with info about MX records\r\nhttps://support.google.com/a/answer/174125?hl=en\r\n\r\n/cc @ewilderj \r\n/priority p0\r\n/assign jlewi", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Ran the following commands\r\n\r\n```\r\ngcloud --project=kubeflow-dns dns record-sets transaction start -z=kubefloworg\r\ngcloud --project=kubeflow-dns dns record-sets transaction add -z=kubefloworg  --type=MX  --name=\"kubeflow.org.\"  --ttl=3600 \\\r\n\t\"1 ASPMX.L.GOOGLE.COM.\" \"5 ALT1.ASPMX.L.GOOGLE.COM.\" \"5 ALT2.ASPMX.L.GOOGLE.COM.\" \\\r\n\t\"10 ALT3.ASPMX.L.GOOGLE.COM.\" \"10 ALT4.ASPMX.L.GOOGLE.COM.\"\r\ngcloud --project=kubeflow-dns dns record-sets transaction execute -z=kubefloworg\r\n```", "createdAt": "2018-05-21T19:07:50Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Confirmed that I could send email to jlewi@kubeflow.org", "createdAt": "2018-05-21T19:08:40Z"}}, {"node": {"author": {"__typename": "User", "login": "ewilderj"}, "body": "WFM too. Thanks for sorting this out!", "createdAt": "2018-05-21T19:17:31Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "title": "[Request] MXNet operator support", "body": "Now we support TensorFlow and pytorch well. MXNet is another popular ML framework and I think we should implement the operator for it to attract more DL practitioners.\r\n\r\nWe need to create a proposal like https://github.com/kubeflow/community/blob/master/proposals/pytorch-operator-proposal.md and create the repository for the operator.\r\n\r\n### References\r\n\r\n- https://mxnet.incubator.apache.org/faq/distributed_training.html\r\n- https://github.com/apache/incubator-mxnet/blob/master/example/gluon/image_classification.py\r\n\r\n/cc @brucechin", "comments": {"totalCount": 22, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@suleisl2000 I have created the repo mxnet-operator.\r\nI also sent you an invite to the org please accept.\r\n\r\nYou'll need to do the following\r\n\r\n1. Follow the instructions here to setup Prow\r\n    * https://github.com/kubeflow/community/blob/master/repository-setup.md#setting-up-prow-for-your-repository\r\n1. Add other reviewers/approvers to the OWNERs file as necessary (they will need to request invites to the Kubeflow org for that to actually work)\r\n1. Please submit a PR adding yourself to members.yaml \r\n    https://github.com/kubeflow/community/blob/master/members.yaml\r\n    so that we know how to reach you\r\n    * All the repo approvers should also be listed there; everyone should submit a PR for themselves so its clear we have their permission to include them in the repo.\r\n1. You should be able to submit and approve PRs to the repo\r\n    * For more info https://github.com/kubeflow/community/blob/master/CONTRIBUTING.md\r\n\r\nLets leave this issue until the above items are completed and the repo is fully setup.\r\n", "createdAt": "2018-08-23T14:12:50Z"}}, {"node": {"author": {"__typename": "User", "login": "idibidiart"}, "body": "Really eager to try MXNet Operator in Kubeflow. Is it ready in master? @suleisl2000 ", "createdAt": "2018-08-24T20:05:06Z"}}, {"node": {"author": {"__typename": "User", "login": "suleisl2000"}, "body": "There is a little bit merge effort to be done. I will try to finish it early next week. Thank you for your attention. @idibidiart ", "createdAt": "2018-08-25T04:41:36Z"}}, {"node": {"author": {"__typename": "User", "login": "suleisl2000"}, "body": "@jlewi Please help invite @jzp1025 into the org as mxnet-operator reviewer. BTW, looks like I don't have access to \"Add the ci-bots team to the repository with write access\" indicated in item 1.", "createdAt": "2018-08-27T10:25:25Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@suleisl2000 I already added the ci-bots; sorry for not making that clear.\r\n\r\nsent @jzp1025 a GitHub invite.", "createdAt": "2018-09-03T21:59:43Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "Could we close the issue? I think the mxnet operator repository has been set up.", "createdAt": "2018-09-04T02:34:59Z"}}, {"node": {"author": {"__typename": "User", "login": "idibidiart"}, "body": "Hi,\r\n\r\nHas it been merged with master? Or is it a separate repo?\r\n\r\nAlso, is there a Readme for using MXNet with Kubeflow?", "createdAt": "2018-09-04T03:15:11Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "https://github.com/kubeflow/mxnet-operator\r\n\r\n@idibidiart ", "createdAt": "2018-09-04T03:20:32Z"}}, {"node": {"author": {"__typename": "User", "login": "idibidiart"}, "body": "Fantastic. Thank you to all who helped with this. ", "createdAt": "2018-09-04T03:21:54Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think we could close the issue since we have the repo for mxnet operator.", "createdAt": "2018-12-02T03:00:03Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "balajismaniam"}, "title": "Request to move KVC repo over to IntelAI org. ", "body": "Offline, @jlewi and I discussed about moving the KVC repo (https://github.com/kubeflow/experimental-kvc) over to the IntelAI org (https://github.com/IntelAI). Jeremy suggested that I open an issue here to document the request. ", "comments": {"totalCount": 15, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Thanks @balajismaniam. You and the other Intel team members are already admin's on the repository so I believe you should be able to request a transfer.\r\n\r\nAt the risk of being pedantic I would like an explicit ack on this issue from @elsonrodriguez and (ideally all the owners listed in the owners file) before doing the transfer. I think its good practice to leave a paper trail indicating consensus.\r\n\r\nConsider this my /lgtm, assigning this to you.\r\n\r\n/assign @balajismaniam ", "createdAt": "2018-05-23T16:32:26Z"}}, {"node": {"author": {"__typename": "User", "login": "balajismaniam"}, "body": "@jlewi Thanks. We can wait for acks from more owners. Regarding the transfer, it seems like only org owners can initiate transfers (org members cannot). ", "createdAt": "2018-05-23T17:18:49Z"}}, {"node": {"author": {"__typename": "User", "login": "elsonrodriguez"}, "body": "I'm out of the loop on this one, I'll defer to @nqn ", "createdAt": "2018-05-23T17:41:34Z"}}, {"node": {"author": {"__typename": "User", "login": "nqn"}, "body": "@jlewi It's a LGTM, if that carries any weight", "createdAt": "2018-05-23T17:55:38Z"}}, {"node": {"author": {"__typename": "User", "login": "Ajay191191"}, "body": "LGTM", "createdAt": "2018-05-23T18:18:36Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Thanks everybody.\r\n\r\nGreat @balajismaniam I think you're good to go with the transfer.", "createdAt": "2018-05-24T02:22:30Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "GitHub only allows me to transfer to myself; I didn't have permissions in IntelAI.org\r\nI transferred it to me with the intent of transferring it to balajismaniam \r\nBut that failed because balajismaniam/experimental-kvc exists\r\n@balajismaniam Can you rename your existing repository so I can transfer to you.", "createdAt": "2018-05-24T19:37:22Z"}}, {"node": {"author": {"__typename": "User", "login": "balajismaniam"}, "body": "@jlewi I changed the name of my fork. Please try again.", "createdAt": "2018-05-24T19:42:25Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Repository has been transffered to @balajismaniam ", "createdAt": "2018-05-24T19:52:17Z"}}, {"node": {"author": {"__typename": "User", "login": "balajismaniam"}, "body": "I transferred it to the IntelAI org. Thanks @jlewi. ", "createdAt": "2018-05-24T20:02:05Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "rongou"}, "title": "new repository for the mpi operator", "body": "Probably kubeflow/mpi-operator.\r\n\r\nSee https://github.com/kubeflow/community/blob/master/proposals/mpi-operator-proposal.md.", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "ankushagarwal"}, "body": "/assign @jlewi ", "createdAt": "2018-05-25T19:43:16Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Repository created\r\nhttps://github.com/kubeflow/mpi-operator\r\n\r\nI setup repository permissions and branch protections\r\n\r\n@rongou Please follow these [instructions](https://github.com/kubeflow/community/blob/master/repository-setup.md) to\r\n\r\n  * Enable automatic merging via ci bots (enable tide)\r\n  * Create an OWNERs file\r\n  * Setup prow jobs for CI\r\n\r\n/assign @rongou \r\n/unassign @jlewi\r\n", "createdAt": "2018-05-26T18:38:43Z"}}, {"node": {"author": {"__typename": "User", "login": "rongou"}, "body": "This is done.", "createdAt": "2018-06-04T18:25:39Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "nilanjana2015"}, "title": "setting up the dashboard for two systems(master-worker) on openstack", "body": "I have set up a kubernetes cluster with two openstack instances(master-worker). I wanted to expose the kubernetes dashboard exposed to the internet. The dashboard doesn't open from my local even after setting it up. Is there some restriction from kubernetes/openstack side? Why can't I access it from my browser ? ", "comments": {"totalCount": 7, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I'd suggest looking at the docs for the K8s dashboard\r\nhttps://github.com/kubernetes/dashboard/wiki/Accessing-Dashboard---1.7.X-and-above\r\n\r\nIf you're just trying to access the K8s dashboard then that doesn't really involve Kubeflow.", "createdAt": "2018-05-29T03:29:34Z"}}, {"node": {"author": {"__typename": "User", "login": "nilanjana2015"}, "body": "Hi Jlewi.. Actually I have installed kubeflow in my master and was trying to deploy some tensorflow models in my cluster. The model runs pretty well but the only problem is was not able set the dashboard up and also the jupyter notebook and expose the port", "createdAt": "2018-05-29T07:25:37Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "What is the problem you are having with Jupyter? Are you trying to connect using `kubectl port-forward`?", "createdAt": "2018-05-29T12:48:27Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/label question", "createdAt": "2018-05-29T12:48:43Z"}}, {"node": {"author": {"__typename": "User", "login": "nilanjana2015"}, "body": "The jupyter notebooks are all up and running as I can see in my terminal(logging in into master)  but the only problem is I am not able to check it on my browser. Both are machines that I am using for creating my cluster are openstack instances. ", "createdAt": "2018-05-29T13:05:44Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "If you are trying to access the notebooks you will need to figure out how you connect to services running inside your cluster from your local machine. Did you try following the [instructions](https://github.com/kubeflow/kubeflow/blob/master/user_guide.md#bringing-up-a-jupyter-notebook) to use kubectl to port-forward to JupyterHub?", "createdAt": "2018-05-31T12:33:18Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/label question", "createdAt": "2018-06-01T20:56:36Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Create marketing-materials repository", "body": "@aronchick Created the repository marketing-materials.\r\n\r\nCreating this issue to track setup.\r\n\r\nIt looks like the repo is missing an initial commit.", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Added an OWNERs file; need to finish setting it up.", "createdAt": "2018-06-03T18:48:07Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Tide is enabled for the Kubeflow org\r\nhttps://github.com/kubernetes/test-infra/blob/d813268c258ad9e0486777611f7206f9d61e3e56/prow/config.yaml#L167\r\n\r\nSo we should be good to go for automatic merging.", "createdAt": "2018-06-07T03:28:03Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think we could close the issue.\r\n\r\nhttps://github.com/kubeflow/marketing-materials", "createdAt": "2018-12-02T03:01:29Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "devstats.kubeflow.org is down; 502 errors", "body": "devstats.kubeflow.org is returning a 502.", "comments": {"totalCount": 8, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Grafana is crash looping\r\n\r\n```\r\nt=2018-06-05T23:28:11+0000 lvl=eror msg=\"Exec failed\" logger=migrator error=\"attempt to write a readonly database\" sql=\"CREATE TABLE IF NOT EXISTS `user_auth` (\\n`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL\\n, `user_id` INTEGER NOT NULL\\n, `auth_module` TEXT NOT NULL\\n, `auth_id` TEXT NOT NULL\\n, `created` DATETIME NOT NULL\\n);\"\r\nt=2018-06-05T23:28:11+0000 lvl=eror msg=\"Fail to initialize orm engine\" logger=sqlstore error=\"Sqlstore::Migration failed err: attempt to write a readonly database\\n\"\r\n```", "createdAt": "2018-06-05T23:33:44Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Similar issue https://github.com/grafana/grafana/issues/10830\r\n\r\nMaybe the database got marked read only somehow? i.e maybe its a permission issue?\r\n\r\n", "createdAt": "2018-06-05T23:39:42Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Looking at the top of the logs.\r\n```\r\nGF_PATHS_DATA='/data/grafana' is not writable.\r\n```", "createdAt": "2018-08-29T03:01:40Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Here's the pod spec\r\n\r\n```\r\napiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  creationTimestamp: 2018-06-05T23:36:36Z\r\n  generateName: grafana-8595f7984-\r\n  labels:\r\n    app: grafana\r\n    pod-template-hash: \"415193540\"\r\n  name: grafana-8595f7984-sbd2w\r\n  namespace: devstats\r\n  ownerReferences:\r\n  - apiVersion: extensions/v1beta1\r\n    blockOwnerDeletion: true\r\n    controller: true\r\n    kind: ReplicaSet\r\n    name: grafana-8595f7984\r\n    uid: 52385a35-4953-11e8-93a9-42010af0000d\r\n  resourceVersion: \"35256365\"\r\n  selfLink: /api/v1/namespaces/devstats/pods/grafana-8595f7984-sbd2w\r\n  uid: 4976dc50-6919-11e8-ab39-42010af00101\r\nspec:\r\n  containers:\r\n  - env:\r\n    - name: GF_PATHS_DATA\r\n      value: /data/grafana\r\n    - name: GF_PATHS_PROVISIONING\r\n      value: /conf/grafana/provisioning\r\n    - name: GF_SECURITY_ADMIN_PASSWORD\r\n      valueFrom:\r\n        secretKeyRef:\r\n          key: admin_password\r\n          name: grafana\r\n    - name: GF_AUTH_ANONYMOUS_ENABLED\r\n      value: \"true\"\r\n    image: grafana/grafana\r\n    imagePullPolicy: IfNotPresent\r\n    name: grafana\r\n    ports:\r\n    - containerPort: 3000\r\n      protocol: TCP\r\n    resources: {}\r\n    terminationMessagePath: /dev/termination-log\r\n    terminationMessagePolicy: File\r\n    volumeMounts:\r\n    - mountPath: /data/grafana\r\n      name: grafana-data\r\n    - mountPath: /conf/grafana/provisioning/dashboards\r\n      name: grafana-providers\r\n    - mountPath: /conf/grafana/dashboards\r\n      name: grafana-dashboards\r\n    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\r\n      name: grafana-token-mndj2\r\n      readOnly: true\r\n  dnsPolicy: ClusterFirst\r\n  nodeName: gke-kubeflow-testing-default-pool-90dc0402-dzvl\r\n  restartPolicy: Always\r\n  schedulerName: default-scheduler\r\n  securityContext: {}\r\n  serviceAccount: grafana\r\n  serviceAccountName: grafana\r\n  terminationGracePeriodSeconds: 30\r\n  tolerations:\r\n  - effect: NoExecute\r\n    key: node.kubernetes.io/not-ready\r\n    operator: Exists\r\n    tolerationSeconds: 300\r\n  - effect: NoExecute\r\n    key: node.kubernetes.io/unreachable\r\n    operator: Exists\r\n    tolerationSeconds: 300\r\n  volumes:\r\n  - gcePersistentDisk:\r\n      fsType: ext4\r\n      pdName: grafana-data\r\n    name: grafana-data\r\n  - configMap:\r\n      defaultMode: 420\r\n      name: grafana-dashboards\r\n    name: grafana-dashboards\r\n  - configMap:\r\n      defaultMode: 420\r\n      name: grafana-providers\r\n    name: grafana-providers\r\n  - name: grafana-token-mndj2\r\n    secret:\r\n      defaultMode: 420\r\n      secretName: grafana-token-mndj2\r\nstatus:\r\n  conditions:\r\n  - lastProbeTime: null\r\n    lastTransitionTime: 2018-06-05T23:36:36Z\r\n    status: \"True\"\r\n    type: Initialized\r\n  - lastProbeTime: null\r\n    lastTransitionTime: 2018-08-29T01:58:38Z\r\n    message: 'containers with unready status: [grafana]'\r\n    reason: ContainersNotReady\r\n    status: \"False\"\r\n    type: Ready\r\n  - lastProbeTime: null\r\n    lastTransitionTime: 2018-06-05T23:36:36Z\r\n    status: \"True\"\r\n    type: PodScheduled\r\n  containerStatuses:\r\n  - containerID: docker://9c6bfcfb6964f3296b6ed4c19305141f6b9bb6ed0aae556e7173c0a465c9f05c\r\n    image: grafana/grafana:latest\r\n    imageID: docker-pullable://grafana/grafana@sha256:364bec4a39ecbec744ea4270aae35f6554eb6f2047b3ee08f7b5f1134857c32c\r\n    lastState:\r\n      terminated:\r\n        containerID: docker://9c6bfcfb6964f3296b6ed4c19305141f6b9bb6ed0aae556e7173c0a465c9f05c\r\n        exitCode: 1\r\n        finishedAt: 2018-08-29T02:59:41Z\r\n        reason: Error\r\n        startedAt: 2018-08-29T02:59:41Z\r\n    name: grafana\r\n    ready: false\r\n    restartCount: 23610\r\n    state:\r\n      waiting:\r\n        message: Back-off 5m0s restarting failed container=grafana pod=grafana-8595f7984-sbd2w_devstats(4976dc50-6919-11e8-ab39-42010af00101)\r\n        reason: CrashLoopBackOff\r\n  hostIP: 10.142.0.4\r\n  phase: Running\r\n  podIP: 10.36.1.184\r\n  qosClass: BestEffort\r\n  startTime: 2018-06-05T23:36:36Z\r\n\r\n```\r\n\r\nSo it should be using a PD.", "createdAt": "2018-08-29T03:02:24Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "```\r\ngcloud --project=kubeflow-ci compute disks describe --zone=us-east1-d grafana-data\r\ncreationTimestamp: '2018-04-19T11:16:21.186-07:00'\r\nid: '2420561609386975771'\r\nkind: compute#disk\r\nlabelFingerprint: 42WmSpB8rSM=\r\nlastAttachTimestamp: '2018-06-05T16:36:50.744-07:00'\r\nlastDetachTimestamp: '2018-06-05T16:36:48.643-07:00'\r\nname: grafana-data\r\nselfLink: https://www.googleapis.com/compute/v1/projects/kubeflow-ci/zones/us-east1-d/disks/grafana-data\r\nsizeGb: '400'\r\nstatus: READY\r\ntype: https://www.googleapis.com/compute/v1/projects/kubeflow-ci/zones/us-east1-d/diskTypes/pd-standard\r\nusers:\r\n- https://www.googleapis.com/compute/v1/projects/kubeflow-ci/zones/us-east1-d/instances/gke-kubeflow-testing-default-pool-90dc0402-dzvl\r\nzone: https://www.googleapis.com/compute/v1/projects/kubeflow-ci/zones/us-east1-d\r\n```", "createdAt": "2018-08-29T03:03:25Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I changed the grafana deployment to just run \"tail -f /dev/null\" so I could then start a shell in the pod and look at the permissions\r\n\r\n```\r\nls -la\r\ntotal 12\r\ndrwxr-xr-x 3 root root 4096 Aug 29 03:12 .\r\ndrwxr-xr-x 1 root root 4096 Aug 29 03:12 ..\r\ndrwxr-xr-x 4  104  107 4096 May 25 05:39 grafana\r\ngrafana@grafana-757578bbcd-zlbvt:/data$ userid\r\nbash: userid: command not found\r\ngrafana@grafana-757578bbcd-zlbvt:/data$ user\r\nbash: user: command not found\r\ngrafana@grafana-757578bbcd-zlbvt:/data$ whoami\r\ngrafana\r\ngrafana@grafana-757578bbcd-zlbvt:/data$ id\r\nuid=472(grafana) gid=472(grafana) groups=472(grafana)\r\n```\r\n\r\nSo it looks like the owner and group of the grafana database are not the grafana user.", "createdAt": "2018-08-29T03:16:03Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I fixed this using the follow recipe\r\n\r\n1. Modified the deployment to use the `ubuntu` image and mount the grafana volume\r\n1. Created a shell in the ubuntu container\r\n1. Make it world readable\r\n\r\n```\r\nchmod a+rwx -R /data/grafana\r\n```\r\n\r\n1. Created a user and group with id 472\r\n1. Changed owner and group of /data/grafana to be user & group 472\r\n\r\nThat fixed the grafana crashloop.", "createdAt": "2018-08-29T03:31:55Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "devstats.kubeflow.org is back up.", "createdAt": "2018-08-29T03:41:58Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "everpeace"}, "title": "new repository for chainer-operator", "body": "Probably kubeflow/chainer-operator.\r\n\r\nSee https://github.com/kubeflow/community/blob/master/proposals/chainer-operator-proposal.md.\r\n\r\n/area operator\r\n/assign @jlewi", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Created a repository\r\nhttps://github.com/kubeflow/chainer-operator\r\n\r\nAdded ci-bots with write access\r\n\r\nEnabled branch protection on master\r\n\r\nPlease submit an OWNERs file per\r\nhttps://github.com/kubeflow/community/blob/master/repository-setup.md\r\n", "createdAt": "2018-06-07T03:32:12Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think we could close the issue since we already have the repository.", "createdAt": "2018-06-11T06:34:57Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "title": " [Request] Repository for CRD Validation Tool", "body": "I am working on CRD validation for kubeflow/tf-operator and implementing a general-purpose tool https://github.com/gaocegege/crd-validation\r\n\r\nI think we could use the tool to generate CRD validation spec for each CRD in the community, and it should work after Kubernetes 1.11 is released with `additionalproperty` support in the validation feature. Then I request to create a repository for the tool.", "comments": {"totalCount": 8, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Can we put the tool in tf-operator for now and think about refactoring later?\r\nEvery repository brings with it non-negligible overhead.\r\n\r\nAlso assuming tf-operator will be the first use for this tool keeping it in the same repository will make it easier to summit PRs that modify the tool and tf-operator simultaneously to keep them in sync. ", "createdAt": "2018-06-14T18:13:59Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "OK, we could put the tool in gaocegege/crd-validation and keep the thing going.", "createdAt": "2018-06-25T03:15:29Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "Could we move the tool to kubeflow?", "createdAt": "2018-07-30T05:10:03Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@gaocegege My apologies for not responding sooner. Should we just transfer over the existing repository?\r\nJust let me know what you need from me to do the transfer.", "createdAt": "2018-08-06T22:53:45Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "This repo only needs a transfer. While I have no permission to create repos in Kubeflow. We have to choice:\r\n\r\n1. Give me a temporary permission to transfer\r\n2. @jlewi accepts the invitation in https://github.com/kubeflow-incubator and transfer it to kubeflow.", "createdAt": "2018-08-07T03:13:07Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I accepted the invite. @gaocegege can you just confirm here that you want me to go ahead and transfer \r\nhttps://github.com/kubeflow-incubator/crd-validation\r\nto Kubeflow?", "createdAt": "2018-08-08T05:38:47Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "Yeah, I think so. \ud83d\ude04 ", "createdAt": "2018-08-08T07:27:10Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Done\r\nhttps://github.com/kubeflow/crd-validation", "createdAt": "2018-08-10T01:08:32Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "ddysher"}, "title": "accepted-proposals.md doesn't seem to be properly maintained", "body": "https://github.com/kubeflow/community/blob/master/accepted-proposals.md\r\n\r\n:point_up_2: should we get rid of this file and simply point community members to `proposal` directory?\r\n\r\n/cc @jlewi @ewilderj @gaocegege @ScorpioCPH ", "comments": {"totalCount": 6, "edges": [{"node": {"author": {"__typename": "User", "login": "ScorpioCPH"}, "body": "SGTM, let's simplify the proposal process.", "createdAt": "2018-07-02T11:39:21Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I think that's reasonable.\r\n\r\nShould we encourage people to directly update there markdown docs to include status information.\r\n\r\nSo as an example for \r\n\r\ntf-operator-design-v1alpha2.md\r\n\r\nWe could have a status section with points like\r\n\r\n2018-XX-XX - Accepted\r\n2018-XX-XX - Implementation Started\r\n2018-XX-XX - v1alpha2 released in 0.2\r\n\r\n", "createdAt": "2018-07-02T11:47:42Z"}}, {"node": {"author": {"__typename": "User", "login": "ewilderj"}, "body": "Makes sense to me. ", "createdAt": "2018-07-02T19:42:08Z"}}, {"node": {"author": {"__typename": "User", "login": "ddysher"}, "body": "/assign\r\n\r\nAssign to myself, trying to catch up with kubeflow status. \r\n\r\nI created a PR to update the proposals: https://github.com/kubeflow/community/pull/156, PTAL", "createdAt": "2018-07-03T06:48:13Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "@ddysher \r\nThanks! SGTM", "createdAt": "2018-07-03T07:17:22Z"}}, {"node": {"author": {"__typename": "User", "login": "ddysher"}, "body": "https://github.com/kubeflow/community/pull/156 is merged\r\n\r\n/close \r\n", "createdAt": "2018-07-05T03:53:23Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "title": "[Request] Repository for TFJob Java Client", "body": "@JetMuffin contributes Java client for TFJob. And the contribution needs 2 repos: one for Java client and one for spec generation tool.\r\n\r\nI request to introduce it into kubeflow org from kubeflow-incubator org. WDYT\r\n\r\n@jlewi ", "comments": {"totalCount": 4, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@gaocegege My apologies for not responding sooner. Should we just transfer over the existing repositories? ", "createdAt": "2018-08-06T22:53:07Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "@jlewi We need some additional work to do. I think @JetMuffin will help us.", "createdAt": "2018-08-07T03:10:00Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "SGTM. When you're ready to actually move the repository just find me on slack so we can coordinate.\r\n", "createdAt": "2018-08-08T05:36:44Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "Thanks.\r\n\r\n/cc @JetMuffin", "createdAt": "2018-08-08T07:27:36Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "cheyang"}, "title": "[Request] Repository for Arena", "body": "\r\nMove repository from https://github.com/AliyunContainerService/arena to KubeFlow community.\r\n\r\n/assign @jlewi ", "comments": {"totalCount": 25, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@kkasravi @wbuchwalter @gaocegege thoughts?\r\n\r\nOne question I have is when would we suggest users to use lower level tools (e.g. directly write YAML files and use kubectl) vs using Arena?\r\n\r\n", "createdAt": "2018-08-29T01:36:48Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "What do folks think about just starting to incorporate Arena and seeing where it leads?", "createdAt": "2018-08-29T01:38:43Z"}}, {"node": {"author": {"__typename": "User", "login": "kkasravi"}, "body": "@jlewi +1 \r\n\r\nI think using the clientset API within a golang program needs to be explored and the reasons are similar to why bootstrapper uses a rest API from golang. I would suggest we look for ways to make the API extensible so that new or different methods can be bound within the spf13/cobra command set. One area I had prototyped was dynamically loading .so's\r\n```\r\n        p, err := plugin.Open(os.Args[1])\r\n        if err != nil {\r\n                panic(err)\r\n        }\r\n        sym, err := p.Lookup(\"CmdFoo\")\r\n```\r\nbut adopting something similar to kubectl plugin architecture may be more extensible.", "createdAt": "2018-08-29T06:12:01Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think for newcomers or entry-level data scientists/ML engineers, we should provide a CLI/simplified API to help them run their jobs easily. Because there are some users do not understand the concepts of Kubernetes and do not know how to use kubectl to create resources on Kubernetes, and they do not want to learn. And that's why I suggested building a unified API layer here: https://docs.google.com/document/d/1RkNL6XY7rR4eaW1TuM-loMuX9Dm5pFi5wpaFnnrH5LM/edit?usp=sharing\r\n\r\nAs for the advanced users, we should keep the kubernetes way. In this way, they could have some low-level configuration for their training jobs.", "createdAt": "2018-08-29T06:34:29Z"}}, {"node": {"author": {"__typename": "User", "login": "wsxiaozhang"}, "body": "@jlewi  good question of when we suggest users to use kubectl or arena. \r\nI think it depends on what role the user is. In our observation, most of AI organizations have one data scientists team and one engineering/operation team. Data scientists focus on algorithm and data processing, and repeatedly submit training jobs to cluster. Engineers/Operators take care of infrastructure and K8S cluster. Most data scientists don't and needn't care about K8S, even docker. All K8S related details are transparent to them. Arena is created for them.  Meanwhile, people still can manage everything via lower level tools like kubectl/helm if they like to customize their job.", "createdAt": "2018-08-29T11:27:47Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I went ahead and created the arena repository.\r\nPlease follow these directions to continue setting it up:\r\nhttps://github.com/kubeflow/community/blob/master/repository-setup.md\r\n\r\nI've created an initial OWNERS file with @cheyang so he can approve changes including adding additional approvers and reviewers.\r\n\r\nI created a new repo rather than transferring the existing repo, because I'd like a record of the CLA being signed as part of code submission.\r\n\r\nWe can use:\r\nhttps://github-issue-mover.appspot.com/\r\n\r\nTo move issues if desired. ", "createdAt": "2018-08-29T13:06:56Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@wsxiaozhang my question is more about when we tell users to switch from submitting jobs via arena/CLI to writing YAML files. For example, are there modifications (adding volumes, setting resource requests, environment variables) which arena will explicitly not support? \r\n\r\nWe had originally tried (using ksonnet prototype parameters) to make it easy for users to customize TFJob and TFServing just by setting parameters.\r\n\r\nIn practice, we found that this led to very complex prototypes that were hard to understand. As a result, we've been moving more in the direction of treating \"prototypes\" as examples that people copy and then modify.\r\n\r\nAs an example of the complexity you can look at the TFServing prototype\r\nhttps://github.com/kubeflow/kubeflow/blob/master/kubeflow/tf-serving/tf-serving.libsonnet\r\n\r\nWe wanted to make it easy for people to load their model from different object stores (e.g. GCS or S3). Each of these requires setting different environment variables and volume mounts; some of which might need to be customized by the user.\r\n\r\nThis leads to an every growing number of parameters the user can set (e.g\r\nhttps://github.com/kubeflow/kubeflow/blob/4864eed319f5c562426de9e25f8c7bfaf52029c2/kubeflow/tf-serving/prototypes/tf-serving-all-features.jsonnet ) many of which aren't relevant to the user (e.g. none of the S3 parameters are relevant if you aren't running on S3).\r\n\r\nThe complexity will increase as we try to support more ways of running Kubernetes. For example, at least in the past Azure and GCP used different names for GPU resources.\r\n\r\nLooking at the arena command above; it already has 10 parameters. At what point is it more convenient and better for reproducibility to start checking in YAML files containing the parameters for each run?\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "createdAt": "2018-08-29T13:23:17Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I think a good model for a CLI to submit jobs is `kubectl run`. \r\n\r\n`kubectl run` is very convenient for a certain set of use cases where you largely just need to specify 3 parameters (name, image, command) and creating a YAML file would be unnecessarily cumbersome. \r\n\r\nI don't think of `kubectl run` as creating a simpler API since its using the same API (Pod) as if you created the object yourself.\r\n\r\nIf we find the CLI moving in the direction of defining a substantially different Job API then the underlying operators we should pause and think about the path forward.\r\n\r\n", "createdAt": "2018-08-29T16:12:59Z"}}, {"node": {"author": {"__typename": "User", "login": "cheyang"}, "body": "> I created a new repo rather than transferring the existing repo, because I'd like a record of the CLA being signed as part of code submission.\r\n\r\n@jlewi Is it possible to transfer the existing repo? Because we'd love to keep existing PR, Forks and stars. We  can require new PRs  with CLA signed. Thanks.", "createdAt": "2018-08-29T22:48:52Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Transfer is complete:\r\nhttps://github.com/kubeflow/arena", "createdAt": "2018-08-30T13:08:46Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "tmckayus"}, "title": "[Proposal] Kubeflow Base Images and Supporting Vendors", "body": "This is a proposal originally drafted by Jeremy Lewi with contributions from others, it may still need more eyes and refinement before we consider it final.\r\n\r\nThe goal is to create a set of guidelines for supporting multiple distros as base images in kubeflow components.\r\n\r\nhttps://docs.google.com/document/d/1B3LumU7u9dJA0ElM37KlPeSHJzSSpLV1l52E9ZmbJvo/edit#heading=h.alaoz7uek0k7", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Thanks @tmckayus what would next steps look like?", "createdAt": "2018-08-10T04:27:24Z"}}, {"node": {"author": {"__typename": "User", "login": "carmine"}, "body": "It'd be great to see a prototype of a proposed solution, or start with a proposed solution and go from there. Take one of the kubeflow components (or each type of component as per the google doc) and demonstrate what the solution could look like.  This is for producing images, and ideally the e2e test for those as well.", "createdAt": "2018-08-13T17:57:33Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "sbhamad"}, "title": "Turning multiple end user machines (PCs, Macs, RPi ... etc) into one giant k8s cluster ", "body": "Hi Kubeflow community,\r\n\r\nI am new to kuberenetes && kubeflow and i have a simple question.\r\n\r\nis it possible to turn every end user machine (PCs, Macs, RPi ... etc) who with full consent downloaded my electron research app that should turn their machines into nodes that ultimately comprise a k8s cluster which then i can run kubeflow.org on to do ML research?\r\n\r\nThanks", "comments": {"totalCount": 1, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "This is outside the scope of Kubeflow. This would be a question for the Kubernetes community to figure out  how to assemble user machines into a K8s cluster.", "createdAt": "2018-08-22T17:16:35Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[devstats] Use devstats to identify top contributors", "body": "Now that devstats is back up\r\ndevstats.kubeflow.org\r\n\r\nIt would be great to use it to identify top contributors and recognize them at our summit in September.\r\n", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "This table allows us to break down contributors by number of PRs.\r\nhttps://devstats.kubeflow.org/d/13/developers-table?orgId=1&var-period_name=v0.2.0%20-%20now&var-metric=prs&var-period=anno_1_now", "createdAt": "2018-09-18T01:53:19Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think we could close the issue since we already support it.", "createdAt": "2018-12-02T02:59:21Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Need a way to allow others to tag issues for different releases", "body": "Setting labels on issues requires write permission which is overly broad.\r\n\r\nProw has two relevant commands\r\n/label  - Allows members of the org to set certain labels\r\n\r\nThe label plugin provides commands that add or remove certain types of labels. Labels of the following types can be manipulated: 'area/*', 'committee/*', 'kind/*', 'priority/*', 'sig/*', 'triage/*', and 'wg/*'. More labels can be configured to be used via the /label command.\r\n\r\n/milestone\r\n\r\nThe milestone plugin allows members of a configurable GitHub team to set the milestone on an issue or pull request.\r\n\r\nUnfortunately, I think prow configures milestone to use a group for Kubernetes which wouldn't make sense for us.\r\n\r\nI think a quick fix would to just be to use the label\r\n\r\narea/X.X.X\r\n\r\nas opposed to\r\n\r\nrelease/X.X.X\r\n\r\nWe can start doing this for our 0.4.0 release.", "comments": {"totalCount": 8, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/cc @jbottum", "createdAt": "2018-08-31T05:38:55Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "After #200 is merged we can close this once we verify the label sync ran and we have the label added to all our repos.", "createdAt": "2018-09-21T22:11:27Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "The correct command is\r\n\r\n/area 0.4.0", "createdAt": "2018-09-28T15:45:36Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/area 0.4.0", "createdAt": "2018-09-28T15:47:00Z"}}, {"node": {"author": {"__typename": "User", "login": "jbottum"}, "body": "Great.   I just tried it on this open item and it worked.   Thanks!\n\nhttps://github.com/kubeflow/kubeflow/issues/1620\n\n\n> On Sep 28, 2018, at 10:45 AM, Jeremy Lewi <notifications@github.com> wrote:\n> \n> The correct command is\n> \n> /area 0.4.0\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/kubeflow/community/issues/173#issuecomment-425478452>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AKEHkF9AQhewGW9mP-jUFyBTVG9AW4j2ks5ufkQigaJpZM4WUn4R>.\n> \n\n", "createdAt": "2018-09-28T15:52:26Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "To remove you can do\r\n\r\n/remove-area 0.4.0\r\nFull help here\r\nhttps://prow.k8s.io/command-help?repo=kubeflow%2Fkubeflow", "createdAt": "2018-09-28T16:05:32Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Adding it back\r\n/area 0.4.0", "createdAt": "2018-09-28T16:06:51Z"}}, {"node": {"author": {"__typename": "User", "login": "jbottum"}, "body": "Yes, I did it and It removed the label.\n\n\n> On Sep 28, 2018, at 10:52 AM, Josh Bottum <joshbottum@gmail.com> wrote:\n> \n> Great.   I just tried it on this open item and it worked.   Thanks!\n> \n> https://github.com/kubeflow/kubeflow/issues/1620 <https://github.com/kubeflow/kubeflow/issues/1620>\n> \n> \n>> On Sep 28, 2018, at 10:45 AM, Jeremy Lewi <notifications@github.com <mailto:notifications@github.com>> wrote:\n>> \n>> The correct command is\n>> \n>> /area 0.4.0\n>> \n>> \u2014\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub <https://github.com/kubeflow/community/issues/173#issuecomment-425478452>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AKEHkF9AQhewGW9mP-jUFyBTVG9AW4j2ks5ufkQigaJpZM4WUn4R>.\n>> \n> \n\n", "createdAt": "2018-09-28T16:08:08Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Document release planning process", "body": "We should create an markdown doc describing the release planning process.\r\n\r\nIt probably makes sense to add it to our existing releasing doc here:\r\nhttps://github.com/kubeflow/kubeflow/blob/master/docs_dev/releasing.md\r\n\r\nWe need to document how we assign/track issues for each release.\r\n\r\nPer #173 I think the short term solution is to use a label like\r\n\r\narea/X.X.X\r\n\r\nThis way any member of the Kubeflow GitHub org should be able to tag issues using the prow\r\n\r\n/label area/X.X.X\r\n\r\ncommand\r\n\r\nTo define labels for the release you can submit a PR adding it to this YAMl file\r\nhttps://github.com/kubeflow/testing/blob/master/label_sync/kubeflow_label.yml\r\n\r\nA cron job periodically ensures that the labels in that file are added to all repositories.\r\n\r\n/cc @jbottum", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jbottum"}, "body": "Hey Jeremy - Thanks for the advice.    I have started to look at the\nexisting open issues.\n\nI am thinking that we should look at the top candidates on that list i.e.\nthe existing features that are labeled in 0.4, the existing P0 and P1 that\nare not in another release.     This doc works to identify those features:\n\nhttps://docs.google.com/document/d/13vBugi1eHND9WFDtasEhvY8BkFJ8MUfahTFsVG13_LU/edit\n\n\n\n\nOn Fri, Aug 31, 2018 at 12:42 AM Jeremy Lewi <notifications@github.com>\nwrote:\n\n> We should create an markdown doc describing the release planning process.\n>\n> It probably makes sense to add it to our existing releasing doc here:\n> https://github.com/kubeflow/kubeflow/blob/master/docs_dev/releasing.md\n>\n> We need to document how we assign/track issues for each release.\n>\n> Per #173 <https://github.com/kubeflow/community/issues/173> I think the\n> short term solution is to use a label like\n>\n> area/X.X.X\n>\n> This way any member of the Kubeflow GitHub org should be able to tag\n> issues using the prow\n>\n> /label area/X.X.X\n>\n> command\n>\n> To define labels for the release you can submit a PR adding it to this\n> YAMl file\n>\n> https://github.com/kubeflow/testing/blob/master/label_sync/kubeflow_label.yml\n>\n> A cron job periodically ensures that the labels in that file are added to\n> all repositories.\n>\n> /cc @jbottum <https://github.com/jbottum>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/kubeflow/community/issues/174>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AKEHkOrGsnul8OhyXvoNn88u7BfWtOGyks5uWMzMgaJpZM4WUoFY>\n> .\n>\n", "createdAt": "2018-08-31T14:36:39Z"}}, {"node": {"author": {"__typename": "User", "login": "idvoretskyi"}, "body": "/cc", "createdAt": "2018-10-10T15:43:43Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Create a repository for fairing; library for firing off TFJobs from Jupyter", "body": "See kubeflow/kubeflow#1240\r\n\r\n@wbuchwalter Has been working on a prototype for a library to make it easy to fire off TFJobs (and other jobs) from Jupyter notebooks.\r\n\r\nWe want to create a repo in Kubeflow for this to make it easier for other to collaborate.", "comments": {"totalCount": 1, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Created the repository\r\nEnabled branch protections\r\nAdded an initial OWNERs file\r\n\r\nWill file a separate issue to setup prow.", "createdAt": "2018-09-03T21:33:17Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Presubmit test to ensure members.yaml is sorted by GitHub id", "body": "We should add a presubmit test to verify members.yaml is sorted correctly by GitHub id.", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "sarahmaddox"}, "title": "Dedupe community and contributor guides on GitHub vs in the docs", "body": "The content for the Kubeflow community and contributor guides currently exists on GitHub and in the docs. For both guides, the content is long and reasonably complex, and is already getting out of sync.\r\n\r\nProposal: Remove the bulk of the content from the GitHub repo, and link to the docs as the source of truth.\r\n\r\nCommunity guide:\r\nhttps://github.com/kubeflow/community/blob/master/README.md\r\nhttps://master.kubeflow.org/docs/about/community/\r\n\r\nContributor guide:\r\nhttps://github.com/kubeflow/community/blob/master/CONTRIBUTING.md\r\nhttps://master.kubeflow.org/docs/about/contributing/", "comments": {"totalCount": 1, "edges": [{"node": {"author": {"__typename": "User", "login": "sarahmaddox"}, "body": "/assign\r\n/area docs", "createdAt": "2018-09-09T21:21:32Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "inc0"}, "title": "[Proposal] Make external SQL-compatible database requirement for Kubeflow", "body": "# SQL database as requirement to Kubeflow\r\n\r\nCurrently only one component of Kubeflow requires SQL, and that's Katib. In various discussion we determined that another planned component, experiment tracking, will also require some sort of proper database (due to scale and requirement for advanced querying).\r\n\r\nRunning database in Kubernetes is very hard to maintain and setup properly, we shouldn't be in business of writing operation code for databases. Currently in Katib we deploy simplistic mysql instance (single node, lack of persistence), which isn't viable for production use cases. Building code that will manage fully clustered, persistent and stateful relational database is very high and outside of scope of Kubeflow.\r\n\r\nDuring discussions we determined that external database is reasonable requirement:\r\n* Every major public cloud already have managed database offering\r\n* On-prem can either deploy SQL compatible database on their own (inside or outside Kubernetes, for example with Vitess)\r\n\r\nI'd like to propose that we will make SQL database hard requirement for those components of Kubeflow which require it, and make sure that configuration of it is uniform across project.\r\n\r\n## Additional cost to deployment\r\n\r\nAdding big requirement like that shouldn't be taken lightly. Kubeflow already struggles with deployment experience, this will further require deployers (especially first time deployers) to make few additional steps to it. This problem can be partially solved by adding good documentation for all public clouds + bare metal. Besides docs we could also add small yaml manifest to deploy PoC database, that's not production ready but is enough to try out Kubeflow.\r\n\r\n## Uniform configuration\r\n\r\nI think it should be requirement across project that all database configs should be handled in same way. One example approach would be to ask users to manually create Kubernetes secret and set it's name as parameter (with default being {kubeflow component name}-database). For example:\r\n\r\n```\r\napiVersion: v1\r\nkind: Secret\r\nmetadata:\r\n  name: katib-database\r\ntype: Opaque\r\ndata:\r\n  database_username: YWRtaW4=\r\n  database_password: MWYyZDFlMmU2N2Rm\r\n  database_name: ZGF0YWJhc2VfbmFtZQo=\r\n  database_host: MTkyLjE2OC4xLjE6MzMwNgo=\r\n```\r\n\r\nAfter that we can mount secret values as envs to pods and use them in code.\r\n\r\n## Note about schema upgrades\r\n\r\nSince we'll assume existing relational database, we will need to manage schema migrations. This can be handled by projects like alembic in python. Seamless upgrades will be hard requirement for production projects. We will also need to take account that certain types of schema upgrades are very expensive computationally and can lock database for hours at the time, these should be avoid. Each schema migration should be detailed in release notes including warning if it's one of problematic ones.\r\n\r\nWe also should build CI infra that will test:\r\n* Deploy version X of Kubeflow and fill it with fake data\r\n* Run upgrade to X+1 and test old data integrity\r\n\r\n## Cross-compatibility of SQL\r\n\r\nMost of SQL databases use same set of instructions, but it's not always the case (for example Postgresql supports views). I think it's good for Kubeflow to avoid engine specific features. I propose that we will test compatibility against:\r\n* MySQL / MariaDB\r\n* Postgresql\r\n* CockroachDB (this is, afaik, best solution to k8s-driven relational database)\r\n\r\nWe should build test scenarios that will deploy each of these engines and run our CI on it, and run it periodically.\r\n\r\n", "comments": {"totalCount": 7, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Thanks; this is great.\r\n\r\nAre we really in the position to start talking about databases at the Kubeflow level as opposed to in the context of individual microservices?\r\n\r\nIts unclear to me at least what the right database for individual services should be. For example, should Katib use SQL, NOSQL, key-value, etc....?\r\n\r\nIs SQL really a Kubeflow requirement? If a user doesn't have SQL, I would still expect that to be able to use large parts of the platform (pretty much everything except Katib at this point).\r\n", "createdAt": "2018-09-26T12:48:27Z"}}, {"node": {"author": {"__typename": "User", "login": "inc0"}, "body": "Reason I want to stick to one is so if someone would want to use all of kubeflow, they would only need one database cluster not 4 different ones. We can still note which components needs db and which don't, but if a component needs database, it should be this one.\r\n\r\nHow many things we could do if we'd have database to work with? Use cases I can think of:\r\n1. Experiment tracking - this one will be popular, it will tie all of kubeflow together if we do it right, most people will want it\r\n2. CI/CD for ML - same as above, I expect this to be quite popular too\r\n\r\nAs for picking SQL vs NoSQL etc, that's a valid discussion to have. I assumed SQL because we'd need to re-architect Katib to use different backend, and frankly, SQL is not a bad solution, I'd probably vote for it myself. I'd totally get rid of mongo if at all possible (I think it could be replaced with experiment tracking + tensorboard really...).", "createdAt": "2018-09-26T19:01:13Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I don't doubt the benefit of minimzing the number of databases used but I don't think we should mandate or require that each component only use SQL. That seems like a design decision best left to individual components. Uniformity seems like one consideration that should be taken into account.", "createdAt": "2018-09-27T14:32:37Z"}}, {"node": {"author": {"__typename": "User", "login": "inc0"}, "body": "Whole k8s is built on top of single k/v store. As for various databases (and why SQL):\r\n\r\nk/v stores:\r\n- ETCD - my initial idea, but we'll have issues with scale and there is no good mechanism to do complex queries\r\n- Redis - highly performant, we can do really complex stuff via Lua (if we need to), but it's fault tolerance leaves a lot to wish for, not sure if we want to deal with data loss there\r\n\r\nnosql:\r\n- MongoDB - personal bias - it totally blew up on me. It's fault tolerance is uhh... Also I ran into ton of scalability issues, but that might be my config, it was few years ago.\r\n- Cassandra - Option, I never ran it personally but many people love it\r\n\r\nSQL:\r\nFirst of all, it's familiar. Now operational considerations:\r\n- mysql and pgsql - very popular, ton of hosted options on public clouds and any operator worth their salary knows how to run them reasonably on-prem. Really bad on k8s tho, it wasn't designed with \"pods die, pods restart\" mindset.\r\n- cockroach - new kid in the block, works well on kubernetes, looks promising\r\n\r\nAs for \"require that each component only use SQL\", it's rule we set for ourselves, which means we also can break it if we *really* need to. What I want to setup is a standard that \"we already have database, so if you want to use different, you better have really good reason to\". This is one of reasons why k8s succeed so much (from operators standpoint), you have one database - ETCD, and it's well maintained. We can pick db that's not SQL-based, that's fine, but as I said, we should pick 1 and try hard to keep 1.\r\n\r\nCurrently all of cases I can think of can be modelled with SQL. It's also by far most familiar language with lots of high quality utility libs in any language. That does require us to maintain migrations and that's really hard (especially in projects which looks at having thousands of records, any blocking migration, like alter table, can lock out database for hours). I think we can avoid blocking migrations by clever deprecation (instead of changing datatype of a column, add new column with new datatype, in logic lookup both columns, provide tool to slowly migrate column1 to column2, remove column1 in next version).", "createdAt": "2018-09-27T15:14:08Z"}}, {"node": {"author": {"__typename": "User", "login": "mpvartak"}, "body": "My two cents on the DB for experiment tracking: Having built V1 of ModelDB, I can say fairly confidently that a relational DB is not optimal for storing metadata. Different users want to store very different data for their models -- think authors, teams, descriptions etc -- and the type of data might also change as they go along. So we found that keeping the DB schemaless was important. As for ModelDB, we are implementing the storage as an interface, so users can customize what DBs to use. But we have found document DBs to best fit the bill.", "createdAt": "2018-10-18T22:39:23Z"}}, {"node": {"author": {"__typename": "User", "login": "inc0"}, "body": "You can implement K/V storage in sql based db as well", "createdAt": "2018-10-19T20:27:23Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@inc0 What are the next steps for this proposal?", "createdAt": "2018-11-13T00:58:00Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "chrisheecho"}, "title": "Create a features repo for PMs", "body": "For PM community group and to have a backlog of features and related process, I would like to have a permission to create a repo please! @jlewi @aronchick ", "comments": {"totalCount": 5, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I can't give you that permission but I can create a new repo for you. What would you like this repo to be called?\r\n\r\n@chrisheecho How would this repo be used as a feature backlog? Why would we open up a feature request issue in the new repo as opposed to one of the existing repos?", "createdAt": "2018-09-25T12:22:29Z"}}, {"node": {"author": {"__typename": "User", "login": "chrisheecho"}, "body": "Fantastic, basically it's following the structure that https://github.com/kubernetes has. They have a split between community and features. I see community as the overarching guidance and governance place, where as Features repo will primarily be a working space for the PMs. In addition, it's a place to track features per release so we have PM+Release folks working together in a repo.\r\n\r\n New feature request issue in one of the existing repos might make sense in some cases where an issue/bug can turn into a feature in the future. However, if it's a brand new features with a proposal or roadmap centric discussion, I think it makes more sense to have it in the features repo. ", "createdAt": "2018-10-10T08:33:53Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Thanks created it.", "createdAt": "2018-10-10T13:44:02Z"}}, {"node": {"author": {"__typename": "User", "login": "chrisheecho"}, "body": "you da man", "createdAt": "2018-10-10T14:36:30Z"}}, {"node": {"author": {"__typename": "User", "login": "idvoretskyi"}, "body": "@jlewi the intent is to have a repo similar to https://github.com/kubernetes/features, which heavily inspired the KubeFlow PM group to have a features repo here.\r\n\r\nThanks for creating!\r\n\r\ncc @chrisheecho ", "createdAt": "2018-10-10T15:42:39Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "/label area/0.4.0 doesn't seem to be working ", "body": "The ci bot doesn't appear to be responding to label commands\r\n\r\nRelated to #173 allow members to tag issues for releases.\r\n", "comments": {"totalCount": 11, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/label area/api", "createdAt": "2018-09-28T14:02:15Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Looks like label plugin is enabled here:\r\nhttps://github.com/kubernetes/test-infra/blob/a20b1356786b88cf34233eb144e0c144ff017f64/prow/plugins.yaml#L264", "createdAt": "2018-09-28T14:04:43Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/label kind/bug", "createdAt": "2018-09-28T14:06:36Z"}}, {"node": {"author": {"__typename": "User", "login": "fejta"}, "body": "/kind bug\r\n/area api", "createdAt": "2018-09-28T14:16:56Z"}}, {"node": {"author": {"__typename": "User", "login": "fejta"}, "body": "Is this what you meant? The /label I think just creates the label. Doesn't add it to the PR?", "createdAt": "2018-09-28T14:17:50Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Yup exactly. \r\n\r\nThanks @fejta ", "createdAt": "2018-09-28T15:42:13Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/cancel kind/bug", "createdAt": "2018-09-28T15:44:18Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/close", "createdAt": "2018-09-28T15:44:58Z"}}, {"node": {"author": {"__typename": "User", "login": "k8s-ci-robot"}, "body": "@jlewi: Closing this issue.\n\n<details>\n\nIn response to [this](https://github.com/kubeflow/community/issues/191#issuecomment-425478272):\n\n>/close\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>", "createdAt": "2018-09-28T15:44:59Z"}}, {"node": {"author": {"__typename": "User", "login": "fejta"}, "body": "/remove-kind bug", "createdAt": "2018-09-28T15:47:00Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "pdmack"}, "title": "Issue closer bot", "body": "Other projects automatically close issues that are stale after some period of inactivity (e.g., 90 days). It sounds like maybe we have that already but it's not working?", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "We can use this probot.\r\nhttps://probot.github.io/apps/stale/", "createdAt": "2019-05-14T13:55:06Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Probot has been installed. Per the instructions need to create a \r\n.github/stale.yml  file in order to enable it.", "createdAt": "2019-05-14T13:58:13Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "This is working. Individual repos just need to add a config file as in #3260.\r\nhttps://github.com/kubeflow/kubeflow/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Alifecycle%2Fstale\r\n", "createdAt": "2019-05-16T19:02:39Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "tech509201941"}, "title": "Not able to build from source: Makefile:17: recipe for target 'presubmit' failed", "body": "I want to build kubeflow from source and deploy it in a container.\r\nI used the setup instructions from over here:\r\nhttps://www.kubeflow.org/docs/started/getting-started/\r\n\r\nThis is my docker container:\r\n\r\n```\r\nFROM ubuntu:16.04\r\n\r\nARG DOCKER_HOST=tcp://localhost:2375\r\n\r\nRUN apt-get update\r\nRUN apt-get install sudo\r\nRUN sudo apt-get install -y curl gnupg apt-transport-https ca-certificates software-properties-common curl git bash make python wget autoconf\r\n\r\nCOPY . /usr/src/app\r\nWORKDIR /usr/src/app\r\nRUN ls\r\n\r\nRUN wget https://dl.google.com/go/go1.11.1.linux-amd64.tar.gz && tar xvfz go1.11.1.linux-amd64.tar.gz && sudo chown -R root:root ./go && sudo mv go /usr/local && . env/.profile && . env/.bash_profile\r\n\r\nRUN cd .. && chmod -R +x app && cd app\r\nRUN make && sudo make install\r\n\r\nRUN bash\r\n\r\nRUN ./scripts/kfctl.sh init kfapp_config --platform none\r\nRUN ./scripts/kfctl.sh generate k8s\r\nRUN ./scripts/kfctl.sh apply k8s\r\n```\r\n\r\nEverythings works except the \"RUN make && sudo make install\" part.\r\nIt fails with:\r\n\r\n```\r\n(...)\r\nBoilerplate header is wrong for: /usr/src/app/bootstrap/cmd/bootstrap/app/options/options.go\r\nBoilerplate header is wrong for: /usr/src/app/bootstrap/version/version.go\r\nMakefile:17: recipe for target 'presubmit' failed\r\nmake: *** [presubmit] Error 1\r\nThe command '/bin/sh -c make && sudo make install' returned a non-zero code: 2\r\nERROR: Job failed: error executing remote command: command terminated with non-zero exit code: Error executing in Docker Container: 1\r\n```\r\n\r\nIf I skip the making of the source, I encounter the following error at the part \"RUN ./scripts/kfctl.sh init kfapp_config --platform none\":\r\n\r\n```\r\n(...)\r\n+ check_install ks\r\n+ which ks\r\n+ echo 'You don'\\''t have ks installed. Please install ks.'\r\nYou don't have ks installed. Please install ks.\r\n+ exit 1\r\nThe command '/bin/sh -c ./scripts/kfctl.sh init kfapp_config --platform none' returned a non-zero code: 1\r\nERROR: Job failed: error executing remote command: command terminated with non-zero exit code: Error executing in Docker Container: 1\r\n```\r\n\r\nDoes anyone has an idea on how to address this issue?\r\nThanks a lot :)", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Can you explain what you are trying to accomplish by running \"make\". Per the instructions that's really not a part of the deployment process.\r\n\r\nKubeflow consists of a bunch of different microservices (e.g. TFJob operator) which are spread across multiple repositories and each of which has its own build process.\r\n\r\nSo building from source is not well defined. I would recommended following the getting started guide and deploying are latest 0.3 RC.", "createdAt": "2018-11-13T00:56:02Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "If you need additional help please open up an issue on kubeflow/kubeflow or reach out in slack\r\nkubeflow.slack.com.", "createdAt": "2018-11-13T00:56:31Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Can we delete https://github.com/kubeflow/community/blob/master/members.yaml", "body": "Can we delete \r\n https://github.com/kubeflow/community/blob/master/members.yaml\r\n\r\nIs all the information stored in other places?\r\n\r\nWe now use\r\nhttps://github.com/kubeflow/internal-acls/blob/master/github-orgs/kubeflow/org.yaml\r\n\r\nTo maintain a list of members in the GitHub org.\r\n\r\n* Company info is obtained from the users GitHub profile\r\n  * We have dashboards and stats to get that information.\r\n* What about slack id and email?\r\n\r\nIt doesn't look like GitHub profiles have a field for slack.\r\nSlack doesn't have a profile field for GitHub.\r\n\r\nIn slack you can customize the profile but that requires a paid plan\r\nhttps://get.slack.help/hc/en-us/articles/212281478-Customize-member-profiles\r\n\r\nIn slack its possible to create a link to a particular user\r\nhttps://get.slack.help/hc/en-us/articles/360003827751-Create-a-link-to-a-member-s-profile-#free,-standard,-and-plus-plans-1\r\n\r\nBut its not a pretty link. \r\n\r\nSo maybe the best option is to keep members.yaml but move to internal-acls so that at least people can submit a single PR modifying both.\r\n\r\nWe could also make it optional.\r\n\r\n", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I'm leaning towards delete. I don't think members.yaml will be used very often if its just about looking up slack ids.", "createdAt": "2018-12-07T14:46:46Z"}}, {"node": {"author": {"__typename": "User", "login": "texasmichelle"}, "body": "ah, I was wondering how we maintained org membership. \ud83d\udc4d to deleting `members.yaml`.", "createdAt": "2018-12-15T02:52:24Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "gyliu513"}, "title": "Request to join slack channel", "body": "@jlewi can you help send an invitation? My email address is gyliu513#gmail.com", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "gyliu513"}, "body": "Joined slack by invitation from @gaocegege , thanks.", "createdAt": "2018-12-18T08:26:25Z"}}, {"node": {"author": {"__typename": "User", "login": "TimZaman"}, "body": "@gaocegege Could you invite me too to the slack channel? (timbobel$gmail.com)", "createdAt": "2019-02-12T21:47:37Z"}}, {"node": {"author": {"__typename": "User", "login": "gyliu513"}, "body": "@TimZaman please try this one https://join.slack.com/t/kubeflow/shared_invite/enQtNDg5MTM4NTQyNjczLWUyZGI1ZmExZWExYWY4YzlkOWI4NjljNjJhZjhjMjEwNGFjNmVkNjg2NTg4M2I0ZTM5NDExZWI5YTIyMzVmNzM", "createdAt": "2019-02-13T02:44:07Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "gyliu513"}, "title": "Use stackalytics to track contributions from different company", "body": "We have just enabled stackalytics to track the contributions from different companies for kubeflow at http://stackalytics.com/?project_type=kubeflow-group&release=all&metric=commits\r\n\r\nstackalytics is becoming an official website for open source contributions, like openstack, kubernetes, istio etc, so it would be great if we can use it for kubeflow as well.\r\n\r\nMore discussions are here https://github.com/kubeflow/community/issues/125#issuecomment-448114451\r\n\r\n/cc @jlewi @theadactyl", "comments": {"totalCount": 7, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@gyliu513 What does it mean for stackalytics is become an official website for open source contributions? is the kubernetes or CNCF endorsing it as the way to get metrics for their projects?\r\n", "createdAt": "2018-12-20T14:38:25Z"}}, {"node": {"author": {"__typename": "User", "login": "gyliu513"}, "body": "@jlewi Kubernetes and CNCF is not endorsing it, the stackalytics was originally designed for calculating OpenStack contributions https://wiki.openstack.org/wiki/Stackalytics , but it was now gradually growing up for more open source, like Kubernetes, Istio etc, but I do not know when Kubernetes was added as part of stackalytics. ;-)", "createdAt": "2018-12-21T01:58:33Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I have a preference for https://github.com/cncf/devstats since its\r\n\r\n1. Maintained by CNCF\r\n1. Is used by all CNCF projects\r\n1. Would hopefully give us a single solution for all our stats.\r\n\r\nSo my preference would be to invest in fixing our devstats instance to properly show contributions by company.\r\n\r\nThat said I think the bigger blocker to using Stackalytics is that I think it will require most contributors to submit a PR to OpenStack to set their affiliation. I think we have lots of contributors not using their corporate email with their GitHub accounts. \r\n\r\nI'd like a solution that takes into account the company as set in the user's GitHub profile. \r\n\r\nIt looks like OpenStack isn't using GitHub (https://review.openstack.org/#/c/625774/) (looks like Gerrit). So asking our contributors to summit a PR means asking them to figure out how to use another code review system; it would be great if we could reduce this friction.\r\n\r\n/cc @theadactyl", "createdAt": "2019-01-02T14:45:49Z"}}, {"node": {"author": {"__typename": "User", "login": "gyliu513"}, "body": "> It looks like OpenStack isn't using GitHub (https://review.openstack.org/#/c/625774/) (looks like Gerrit). So asking our contributors to summit a PR means asking them to figure out how to use another code review system; it would be great if we could reduce this friction.\r\n\r\n@jlewi But if you submit your PR via the email address of your company, then you do not need to submit a PR, such as if I submit with email as `xx@cn.ibm.com`, then I will belong to IBM contributors.", "createdAt": "2019-01-02T23:36:42Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@gyliu513 understood but I think a lot of people aren't using corporate email addresses but their profile will list their company.", "createdAt": "2019-01-24T00:31:43Z"}}, {"node": {"author": {"__typename": "User", "login": "gyliu513"}, "body": "@jlewi Yes, I see, then I think we can let developers make their decision, as we have both https://www.stackalytics.com/unaffiliated?project_type=kubeflow-group and https://github.com/cncf/devstats , they can select the one that they like.\r\n\r\nAs I was not going to update https://www.stackalytics.com/unaffiliated?project_type=kubeflow-group anymore and it will be there as it is now, we can continue to enhance https://github.com/cncf/devstats as we want.", "createdAt": "2019-01-24T02:04:57Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Sounds good.", "createdAt": "2019-01-31T13:42:18Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Create a dashboard using dash for GitHub issue stats", "body": "In #224 We created a python script and jupyter notebook to fetch data from the GitHub API about # of GitHub issues under different tags.\r\n\r\nPerhaps we could use dash to create this app?\r\nhttps://plot.ly/products/dash/", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[devstats] developers table isn't showing any data", "body": "https://devstats.kubeflow.org/d/13/developers-table?orgId=1&var-period_name=Last%20decade&var-metric=prs&var-period=y10\r\n\r\nNo data shows up.", "comments": {"totalCount": 9, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "The cron job to sync the git data appears to be working\r\n\r\n```\r\n kubectl get jobs\r\nNAME                       DESIRED   SUCCESSFUL   AGE\r\nbackfill-job               1         1            298d\r\ndevstats-sync-1549886400   1         1            2h\r\ndevstats-sync-1549890000   1         1            1h\r\ndevstats-sync-1549893600   1         1            18m\r\njlewi@jlewi-carbon-glaptop:~/git_kubeflow-community$ kubectl logs -l job-name=devstats-sync-1549893600\r\n2019-02-11 14:00:03 /devstats: Updating git repos for all projects\r\n2019-02-11 14:01:36 /devstats: Updated git repos, took: 1m32.278451715s\r\n2019-02-11 14:01:36 /devstats: Syncing #1 kubeflow\r\n2019-02-11 14:01:54 /devstats: Synced kubeflow, took: 17.825886828s\r\n2019-02-11 14:01:54 /devstats: Synced all projects in: 1m50.21415347s\r\njlewi@jlewi-carbon-glaptop:~/git_kubeflow-community$ \r\n```\r\n", "createdAt": "2019-02-11T14:22:24Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "It looks like the developer stats table come from an influx query.\r\n\r\nThe latest version of devstats no longer uses influx. So maybe its time to upgrade?", "createdAt": "2019-02-11T14:38:55Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "CNCF devstats issue about removing influx:\r\nhttps://github.com/cncf/devstats/issues/106", "createdAt": "2019-02-11T14:54:18Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I asked in CNCF slack the dashboard has been updated to use postgres\r\nhttps://github.com/cncf/devstats/blob/master/grafana/dashboards/kubernetes/developer-activity-counts-by-repository-group.json\r\n\r\nEven though it still says dstype influxdb.\r\n\r\nSince we need to upgrade devstats I think now is a good time to move it out of kubeflow-ci into its own project.\r\n\r\nThis will make it easier to share admin privileges.", "createdAt": "2019-02-11T18:19:05Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Deleted namespace devstats in the kubeflow-testing cluster.\r\n\r\ndevstats is now running in project devstats \r\n\r\nIts serving on http at\r\nhttp://devstats.kubeflow.org\r\n\r\nJust need to fix the certificate to get it serving on https.", "createdAt": "2019-02-17T00:27:12Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Its now available at\r\nhttps://devstats.kubeflow.org", "createdAt": "2019-02-17T01:07:29Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "/close since we fixed it.", "createdAt": "2019-05-16T04:54:17Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "/close", "createdAt": "2019-05-16T04:54:29Z"}}, {"node": {"author": {"__typename": "User", "login": "k8s-ci-robot"}, "body": "@gaocegege: Closing this issue.\n\n<details>\n\nIn response to [this](https://github.com/kubeflow/community/issues/228#issuecomment-492916190):\n\n>/close\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>", "createdAt": "2019-05-16T04:54:30Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[devstats] exclude homebrew repos", "body": "We forked homebrew repos to Kubeflow.\r\n\r\nWe should exclude those rep from stats.", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Do we just drop them from the gha_repos table?", "createdAt": "2019-02-13T04:49:24Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "It looks like we can exclude them in GHA2DB_SYNC\r\nhttps://github.com/cncf/devstats/blob/master/projects.yaml\r\n\r\nI think we may need to drop the tables and then recreate them to delete the data we already have?", "createdAt": "2019-02-13T13:40:08Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[devstats] cron job to run tags and annotations steps regularly", "body": "Do we need to setup a cron job to regularly run the [tags](https://github.com/cncf/devstats/blob/master/shared/tags.sh) and [annotations](https://github.com/cncf/devstats/tree/master/cmd/annotations) steps?\r\n\r\nI think together these two create time range selectors based on tags. These get stored in the tquick_ranges table.\r\n\r\nDo we need to run them regularly or does running devstats regularly take care of this?\r\n\r\n", "comments": {"totalCount": 4, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Project stats table:\r\nhttps://devstats.kubeflow.org/d/18/project-statistics?orgId=1\r\n\r\nData is showing up for v0.3.0 to v0.4.0 tag but not for v0.4.0 to v0.5.0", "createdAt": "2019-05-07T21:43:37Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "It looks like the time ranges are set.\r\n\r\n```\r\n        time         | quick_ranges_suffix | quick_ranges_name |               quick_ranges_data                \r\n---------------------+---------------------+-------------------+------------------------------------------------\r\n 2012-07-01 00:00:00 | d                   | Last day          | d;1 day;;\r\n 2012-07-01 01:00:00 | w                   | Last week         | w;1 week;;\r\n 2012-07-01 02:00:00 | d10                 | Last 10 days      | d10;10 days;;\r\n 2012-07-01 03:00:00 | m                   | Last month        | m;1 month;;\r\n 2012-07-01 04:00:00 | q                   | Last quarter      | q;3 months;;\r\n 2012-07-01 05:00:00 | y                   | Last year         | y;1 year;;\r\n 2012-07-01 06:00:00 | y10                 | Last decade       | y10;10 years;;\r\n 2012-07-01 07:00:00 | a_0_1               | v0.1.0 - v0.2.0   | a_0_1;;2018-04-04 18:32:08;2018-06-29 21:03:57\r\n 2012-07-01 08:00:00 | a_1_2               | v0.2.0 - v0.3.0   | a_1_2;;2018-06-29 21:03:57;2018-10-04 02:21:00\r\n 2012-07-01 09:00:00 | a_2_3               | v0.3.0 - v0.4.0   | a_2_3;;2018-10-04 02:21:00;2019-01-07 16:13:04\r\n 2012-07-01 10:00:00 | a_3_4               | v0.4.0 - v0.5.0   | a_3_4;;2019-01-07 16:13:04;2019-04-08 19:59:17\r\n 2012-07-01 11:00:00 | a_4_n               | v0.5.0 - now      | a_4_n;;2019-04-08 19:59:17;2019-05-09 00:00:00\r\n\r\n```", "createdAt": "2019-05-08T01:00:01Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "check project stats table\r\n```\r\npsql -c -d kubeflow -c  'SELECT * FROM spstat order by time desc;'\r\n```\r\nThere's no data for the period `a_3_4`.\r\n\r\n```\r\n2012-06-30 12:00:00 | pstatall      | a_3_n  | PR creators       |    152\r\n 2012-06-30 07:00:00 | pstatkubeflow | a_3_n  | Repositories      |     24\r\n 2012-06-30 06:00:00 | pstatall      | a_3_n  | Watchers          |   1236\r\n 2012-06-30 06:00:00 | pstatkubeflow | a_3_n  | Watchers          |   1236\r\n 2012-07-01 00:00:00 | pstatall      | a_3_n  | Commenters        |    306\r\n 2012-06-30 07:00:00 | pstatall      | a_3_n  | Repositories      |     26\r\n 2012-06-30 08:00:00 | pstatkubeflow | a_3_n  | Pushes            |    151\r\n 2012-06-30 08:00:00 | pstatall      | a_3_n  | Pushes            |    151\r\n 2012-06-30 09:00:00 | pstatkubeflow | a_3_n  | Pushers           |     21\r\n 2012-06-30 09:00:00 | pstatall      | a_3_n  | Pushers           |     21\r\n 2012-06-30 10:00:00 | pstatkubeflow | a_3_n  | PRs               |   1311\r\n 2012-06-30 10:00:00 | pstatall      | a_3_n  | PRs               |   1311\r\n 2012-06-30 11:00:00 | pstatkubeflow | a_3_n  | PR reviewers      |    105\r\n 2012-06-30 11:00:00 | pstatall      | a_3_n  | PR reviewers      |    105\r\n 2012-06-30 12:00:00 | pstatkubeflow | a_3_n  | PR creators       |    152\r\n 2012-06-30 13:00:00 | pstatkubeflow | a_3_n  | Issues            |    881\r\n 2012-06-30 13:00:00 | pstatall      | a_3_n  | Issues            |    881\r\n 2012-06-30 14:00:00 | pstatkubeflow | a_3_n  | Issue creators    |    201\r\n 2012-06-30 14:00:00 | pstatall      | a_3_n  | Issue creators    |    201\r\n 2012-06-30 15:00:00 | pstatkubeflow | a_3_n  | Issue commenters  |    296\r\n 2012-06-30 15:00:00 | pstatall      | a_3_n  | Issue commenters  |    296\r\n 2012-06-30 16:00:00 | pstatkubeflow | a_3_n  | Forkers           |    373\r\n 2012-06-30 16:00:00 | pstatall      | a_3_n  | Forkers           |    373\r\n 2012-06-30 17:00:00 | pstatall      | a_3_n  | Events            |  31826\r\n 2012-06-30 17:00:00 | pstatkubeflow | a_3_n  | Events            |  54839\r\n 2012-06-30 18:00:00 | pstatkubeflow | a_3_n  | Contributors      |    370\r\n 2012-06-30 18:00:00 | pstatall      | a_3_n  | Contributors      |    370\r\n 2012-06-30 19:00:00 | pstatkubeflow | a_3_n  | Contributions     |  14984\r\n 2012-06-30 19:00:00 | pstatall      | a_3_n  | Contributions     |  14984\r\n 2012-06-30 20:00:00 | pstatkubeflow | a_3_n  | Committers        |    127\r\n 2012-06-30 20:00:00 | pstatall      | a_3_n  | Committers        |    127\r\n 2012-06-30 21:00:00 | pstatkubeflow | a_3_n  | Commits           |   1225\r\n 2012-06-30 21:00:00 | pstatall      | a_3_n  | Commits           |   1225\r\n 2012-06-30 22:00:00 | pstatkubeflow | a_3_n  | Commit commenters |      3\r\n 2012-06-30 22:00:00 | pstatall      | a_3_n  | Commit commenters |      3\r\n 2012-06-30 23:00:00 | pstatkubeflow | a_3_n  | Comments          |  11963\r\n 2012-06-30 23:00:00 | pstatall      | a_3_n  | Comments          |  11963\r\n 2012-07-01 00:00:00 | pstatkubeflow | a_3_n  | Commenters        |    306\r\n```", "createdAt": "2019-05-08T01:08:02Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Lets try running a backfill \r\nhttps://github.com/kubeflow/community/tree/master/devstats#loading-data-into-the-db", "createdAt": "2019-05-08T13:02:55Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "[devstats] relation tcountries", "body": "Some dashboards try to access the table `tcountries` and this doesn't exist.", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "Insullone"}, "title": "Question: will kubeflow continue using ksonnet even if its development may end soon?", "body": "I found the message on the front page of ksonnet (https://ksonnet.io/) that \"The team behind ksonnet is stepping back from the project. As a result, work on ksonnet will end and the GitHub repositories will be archived\". I want to know if there is a plan to continue using ksonnet or replace it? Thank you.", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "User", "login": "n-batalha"}, "body": "Can be closed as a duplicate?\r\n\r\n* https://github.com/kubeflow/kubeflow/issues/2738\r\n* https://github.com/kubeflow/kubeflow/issues/2412", "createdAt": "2019-03-20T18:02:43Z"}}, {"node": {"author": {"__typename": "User", "login": "Insullone"}, "body": "OK.", "createdAt": "2019-03-20T19:39:13Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "zhenghuiwang"}, "title": "Create a kubeflow/metadata repository", "body": "It looks like metadata management should be a kubeflow component of its own. We need a repository e.g. `kubeflow/metadata` for its design proposals, api and schema docs, and implementations.", "comments": {"totalCount": 15, "edges": [{"node": {"author": {"__typename": "User", "login": "aronchick"}, "body": "Correct me if I'm wrong, but I think we are talking past each other.\r\n\r\nI don't BELIEVE @mpvartak is saying that we should have a single metadata solution across Kubeflow. I think she's saying the metadata (the spec, not the implementation) should be separate.\r\n\r\nRight now, the Kubeflow team is proposing keeping them together, and keeping them both in the Kubeflow repo. I think this will be a problem, and will necessarily hurt the adoption of Kubeflow's metadata schema (not implementation). Could you imagine, for example, the TFX team being comfortable using the metadata schema from the Kubeflow repo?", "createdAt": "2019-03-19T16:42:26Z"}}, {"node": {"author": {"__typename": "User", "login": "zhenghuiwang"}, "body": "I think @mpvartak's major concern is the \"native\" metadata store implementation lowers the incentive for 3rd parties to contribute to KF metadata store. I want clarify there won't be a single implementation with one particular DB/framework, but multiple implementations that users can configure during installation. So that 3rd parties still have incentives to contribute to implementations of APIs defined in this repo.\r\n\r\n>  Right now, the Kubeflow team is proposing keeping them together, and keeping them both in the Kubeflow repo. I think this will be a problem, and will necessarily hurt the adoption of Kubeflow's metadata schema (not implementation). Could you imagine, for example, the TFX team being comfortable using the metadata schema from the Kubeflow repo?\r\n\r\nI think it is hard for other open source projects to adopt spec under Kubeflow anyway. (IIRC that is the motivation for #239 ) So having `kubeflow/metadata-spec` and `kubeflow/metadata-store` as two separated repo won't help the adoption of Kubeflow metadata spec.\r\n\r\nI think we can use this repo for metadata schema and store implementations in Kubeflow. If there is a repo for standard ML metadata schema,  we can sync the spec in these two repos.\r\n", "createdAt": "2019-03-19T19:01:29Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "+1 to @zhenghuiwang's comments.\r\n\r\n@mpvartak @aronchick  could you help me understand your problem\r\n\r\n1. Are you ok with creating a new repository in Kubeflow for metadata related efforts?\r\n1. Would you prefer a different name to `kubeflow/metadata` ?\r\n1. Does creating a separate repo or org to host just the metadata specs need to block creating a new repo in Kubeflow to store metadata related code?  \r\n    * If we don't start putting code into a Kubeflow repo, where should it go and how do we unblock development?\r\n\r\n", "createdAt": "2019-03-24T16:31:20Z"}}, {"node": {"author": {"__typename": "User", "login": "mpvartak"}, "body": "@jlewi, @zhenghuiwang, @aronchick, here are some thoughts and a proposed solution.\r\n\r\nMy main concern is that a Kubeflow-native metadata store implementation in Kubeflow dis-incentives 3rd parties to contribute to Kubeflow metadata store. Abhishek gave the example of WandB as a 3rd party who has a solution that can work with Kubeflow. The challenge here is that discovering these alternatives is super hard (e.g., I didn't know WandB even worked with Kubeflow) because there is no indication in the Kubeflow repo. \r\n\r\nI'm good with a metadata repo, my main ask is to make this a community-driven effort that keeps metadata module flexible/open for other components. I think this can happen in parallel with the broader MLSpec efforts.\r\n\r\nSpecifically, I'd recommend:\r\n- Have a schema/api folder in this repo with the KF schema. Ideally, this would be the same schema as David is describing in #239\r\n- Have an implementations folder where Kubeflow, TFX, other 3rd parties can register/provide their implementations. \r\n- Have an easy way for users to find alternative components (discoverability)\r\n- Have other components in KubeFlow use the schema defined in the api folder vs. talking directly to specific implementations\r\n\r\nMore generally, @animeshsingh had a really great comment at the PM group last week which has to do with what Kubeflow wants to be in the long term: a) an opinionated version of an ML framework or b) a composable and extensible ML framework. I believe this is really what we are talking about. To support vision b) -- which I think is the goal of Kubeflow -- I believe separating apis and impls of components will be key and metadata is just the start.\r\n\r\nPS: It looks like Kubeflow serving is going through a similar discussion would be worth seeing how they are handling this decision", "createdAt": "2019-03-27T00:36:17Z"}}, {"node": {"author": {"__typename": "User", "login": "mpvartak"}, "body": "Also, along with helping with the schema, I'm happy to help drive the discoverability of modules.", "createdAt": "2019-03-27T00:41:10Z"}}, {"node": {"author": {"__typename": "User", "login": "zhenghuiwang"}, "body": "IMO Kubeflow is supposed to be an open platform that every ML framework can be part of it, which in turn makes Kubeflow more appealing to end users. Building a community owned metadata API layer is an important step for KF components to leverage each other. Seems we are in an agreement here.\r\n\r\n> Have a schema/api folder in this repo with the KF schema. Ideally, this would be the same schema as David is describing in #239\r\n> Have an implementations folder where Kubeflow, TFX, other 3rd parties can register/provide their implementations.\r\n\r\nThis is also how I envision the structure of the repository.\r\n\r\n> Have an easy way for users to find alternative components (discoverability)\r\n\r\nThat's also my goal but I haven't put too much thought on it. Happy to have you help drive it.\r\n\r\n> Have other components in KubeFlow use the schema defined in the api folder vs. talking directly to specific implementations\r\n\r\nDefinitely want other components to talk to the API.", "createdAt": "2019-03-27T03:47:08Z"}}, {"node": {"author": {"__typename": "User", "login": "aronchick"}, "body": "To follow up on @mpvartak's & @zhenghuiwang's points, and I think splitting the difference for what @jlewi wants, we should have an *external* repo for the general schema, and then a kubeflow/metadata repo that represents the Kubeflow specific metadata that is an implementation of the external schema.", "createdAt": "2019-03-27T18:40:24Z"}}, {"node": {"author": {"__typename": "User", "login": "neuromage"}, "body": "+1 on improving discoverability of components. Maybe kfctl is the right place for this, as this is how users choose what components to deploy. Good and up-to-date documentation on kubeflow.org can help here as well.\r\n\r\nI don't think however it's a good idea to have multiple implementations under a directory in the same repo. I'd prefer if each repo is a cohesive collection of code and assets that work together towards realizing a single implementation. It also makes issue tracking and project planning within implementations easier. Creating a repo isn't expensive, and I don't think we'll have that many implementations for this to be an issue. We can certainly host the API definition itself in another repo as well if needed. \r\n\r\nIf the concern is that /metadata is too general, we can rename the repo to kf-metadata, and have similar ones like /modeldb-metadata etc (or something along those lines).\r\n\r\nI would also argue that there is more value in defining a common schema vs an API, so multiple tools can inter-operate through shared understanding of the representation of ML artifacts. Implementations can be optimized to do different things, each with its own strengths, depending on how the underlying implementations. Therefore I think there is more benefit for the community in having a shared schema vs having a shared implementation API.\r\n", "createdAt": "2019-03-28T17:16:40Z"}}, {"node": {"author": {"__typename": "User", "login": "animeshsingh"}, "body": "> we should have an _external_ repo for the general schema, and then a kubeflow/metadata repo that represents the Kubeflow specific metadata that is an implementation of the external schema.\r\n\r\n+1. This should be right structure. \r\n\r\n1. A metadata org/repo outside of kubeflow org for defining the schema, \r\n2. kf-metadata-store in kubeflow org\r\n3. modeldb-metadata-store in modeldb org", "createdAt": "2019-03-29T05:49:58Z"}}, {"node": {"author": {"__typename": "User", "login": "zhenghuiwang"}, "body": "https://github.com/kubeflow/metadata now exists.\r\n\r\nLet's move the discussion on specific issues in that repository.", "createdAt": "2019-04-02T00:51:02Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "aronchick"}, "title": "Discussion: Move section 7.1 (all metadata schema) to its own non-Kubeflow based organization", "body": "One of the goals of this project is to get as many ecosystem participants to agree on the metadata schema to ease interoperability between different projects. These may include non-Kubeflow projects, but all projects will benefit if the schemas are similar.\r\n\r\nIn order to facilitate this, I propose we move the items in section 7.1 of the [proposal](https://docs.google.com/document/d/104jv0BvQJ3unVEufmHVhJWgUAqJOk2CwsCpk5H5vYug/edit#) to its own organization/repo. I've been playing around with the name \"MLSpec\" but I'm open to whatever everyone thinks would be good. \r\n\r\nThis shouldn't slow Kubeflow's metadata project at all! Just separate out some items which couple everything too tightly today.\r\n\r\ncc @amygdala who also had some thoughts", "comments": {"totalCount": 7, "edges": [{"node": {"author": {"__typename": "User", "login": "aronchick"}, "body": "cc @zhenghuiwang @abhi-g ", "createdAt": "2019-03-05T17:51:26Z"}}, {"node": {"author": {"__typename": "User", "login": "cliveseldon"}, "body": "Makes sense to me. Then a kubeflow repo could provide a reference implementation.", "createdAt": "2019-03-05T22:12:22Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Setting up and maintaining a GitHub organization is a non-trivial amount of work. Some work off the top of my head\r\n\r\n* Setting up CLA checks\r\n* Setting up test-infra\r\n* Maintaining org permissions and invites\r\n\r\nThe last one is a big one since it creates work for potential contributors as well as the maintainers of the org.  For Kubeflow we've been making steady progress to automate this using prow.\r\n\r\nIs there a reason to incur the cost of setting up and maintaining a separate GitHub org now?\r\n\r\nSuppose we start developing the metadata in Kubeflow owned repo, isn't it relatively straightforward to move those into an upstream repo if and when we are ready?\r\n\r\nTransferring a repo between organizations is pretty trivial.  We've done this for a number of repositories; transferring them in and out of Kubeflow.\r\n\r\n\r\n", "createdAt": "2019-03-18T00:23:13Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "kubeflow/community#238 is the issue to setup a repo for metadata.", "createdAt": "2019-03-18T00:25:47Z"}}, {"node": {"author": {"__typename": "User", "login": "aronchick"}, "body": "Correct - but these are two separate issues. The metadata management code/servers, etc, should exist inside Kubeflow, since they are Kubeflow specific. \r\n\r\nThe metadata schema should exist outside of Kubeflow, since it is NOT Kubeflow specific.", "createdAt": "2019-03-18T18:01:28Z"}}, {"node": {"author": {"__typename": "User", "login": "mpvartak"}, "body": "+1 for separating the spec from the implementation (whether in the same repo/separate). More thoughts here: https://github.com/kubeflow/community/issues/238#issuecomment-474221268\r\n\r\nEssentially having a single official metadata implementation will disincentivize third-party metadata tools from integrating with KF. On the other hand, if there are multiple implementations of the same spec, users can pick and choose the one that fits their needs best -- making the platform more flexible and open.", "createdAt": "2019-03-19T07:05:05Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "If the schema exists outside Kubeflow who is going to own and administer it?", "createdAt": "2019-03-24T16:33:35Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "aronchick"}, "title": "Discussion: Have an standard \"extension/custom\" section for each metadata component", "body": "Rather than asking every platform to agree on every spec, perhaps it would be valuable to have a \"standard\" place for people to but information for their particular platform. E.g.\r\n\r\nRun for Platform A:\r\n```\r\nid: xxx\r\nartifacts:\r\n- aaa\r\n- bbb\r\nproject: xxx\r\nannotations: xxx\r\ncustom:\r\n- platform_a_custom_1:\r\n-- aaa\r\n-- bbb\r\n- platform_a_custom_2:\r\n-- aaa\r\n-- bbb\r\n```\r\n\r\nRun for Platform B:\r\n```\r\nid: xxx\r\nartifacts:\r\n- aaa\r\n- bbb\r\nproject: xxx\r\nannotations: xxx\r\ncustom:\r\n- platform_b_custom_1:\r\n-- ccc\r\n-- ddd\r\n```\r\n\r\nBasically, all I'm suggesting is that we think about a standard field into which platform providers can extend their own metadata, while still leaving the rest of the metadata as a standard.", "comments": {"totalCount": 3, "edges": [{"node": {"author": {"__typename": "User", "login": "aronchick"}, "body": "cc @zhenghuiwang @abhi-g ", "createdAt": "2019-03-05T17:51:40Z"}}, {"node": {"author": {"__typename": "User", "login": "zhenghuiwang"}, "body": "I agree it is a good idea to have a standard field that different platform providers can extend. \r\n\r\nCan't we use`annotations` as the standard field? I view annotations as `map<string, string>` so that you can have `annotation['platform_a'] = <JSON serialized string>`.\r\n\r\nWhat's the type of `custom` field? ", "createdAt": "2019-03-05T23:52:47Z"}}, {"node": {"author": {"__typename": "User", "login": "aronchick"}, "body": "Annotations works! I just think the naming of that field makes it kind of confusing (can't think of a better name though)\n\nAgree it should be a map<string, string> type\n________________________________\nFrom: Zhenghui Wang <notifications@github.com>\nSent: Tuesday, March 5, 2019 3:52:47 PM\nTo: kubeflow/community\nCc: David Aronchick; Author\nSubject: Re: [kubeflow/community] Discussion: Have an standard \"extension/custom\" section for each metadata component (#240)\n\n\nI agree it is a good idea to have a standard field that different platform providers can extend.\n\nCan't we useannotations as the standard field? I view annotations as map<string, string> so that you can have annotation['platform_a'] = <JSON serialized string>.\n\nWhat's the type of custom field?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fkubeflow%2Fcommunity%2Fissues%2F240%23issuecomment-469907541&data=02%7C01%7Cdavid.aronchick%40microsoft.com%7Cd7f3ce5275594d4fb1e308d6a1c5abbe%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636874267694820261&sdata=433RR%2Bx9%2FnhwtSVpqwP5%2F0YTt4dTAyaXaVbrcjfQ4iA%3D&reserved=0>, or mute the thread<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAADIdURJRXhlruY6qzQzYsG3R1T-Wibcks5vTwNPgaJpZM4bfKl6&data=02%7C01%7Cdavid.aronchick%40microsoft.com%7Cd7f3ce5275594d4fb1e308d6a1c5abbe%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636874267694830260&sdata=QBOx0ZgmdLvpvuCNVlQa153Y%2FgcZPHqNVx0P76M61Do%3D&reserved=0>.\n", "createdAt": "2019-03-06T00:53:39Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "ellis-bigelow"}, "title": "Create a kubeflow/kfserving repository", "body": "With the recent Kubeflow Serving Working Group activity, it's time to have a place to collaborate together. We need a repository e.g. kubeflow/serving for its design proposals, api and schema docs, and implementations.", "comments": {"totalCount": 8, "edges": [{"node": {"author": {"__typename": "User", "login": "ellis-bigelow"}, "body": "Any thoughts @cliveseldon, @aronchick, @lluunn, @yuzisun, @rakelkar", "createdAt": "2019-03-26T20:12:40Z"}}, {"node": {"author": {"__typename": "User", "login": "ellis-bigelow"}, "body": "/assign @abhi-g ", "createdAt": "2019-03-26T20:14:26Z"}}, {"node": {"author": {"__typename": "User", "login": "abhi-g"}, "body": "I think this is a good idea given the recent discussions happening in the serving working group. ", "createdAt": "2019-03-26T20:36:23Z"}}, {"node": {"author": {"__typename": "User", "login": "cliveseldon"}, "body": "Probably should consider `kubeflow/kfserving` as well. If `kubeflow/serving` then should probably ensure the repo would include all things serving related like TensorRT, raw TFServing and Seldon.", "createdAt": "2019-03-27T07:07:43Z"}}, {"node": {"author": {"__typename": "User", "login": "abhi-g"}, "body": "Yeah, my hope is that we move all serving components in this repository.\n\nOn Wed, Mar 27, 2019 at 12:07 AM cliveseldon <notifications@github.com>\nwrote:\n\n> Probably should consider kubeflow/kfserving as well. If kubeflow/serving\n> then should probably ensure the repo would include all things serving\n> related like TensorRT, raw TFServing and Seldon.\n>\n> \u2014\n> You are receiving this because you were assigned.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/kubeflow/community/issues/242#issuecomment-477007937>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALOqZuJWRGzqirDfsOC6Xzc-OuKCAM9sks5vaxjAgaJpZM4cMWQ2>\n> .\n>\n", "createdAt": "2019-03-27T13:23:04Z"}}, {"node": {"author": {"__typename": "User", "login": "ellis-bigelow"}, "body": "I think the scope of the initial project we're working on is definitely enough to warrant its own repository. I want to avoid a catch-all repo for serving, as it would be confusing to consumers and developers alike.\r\n\r\nWhat do you think about kfserverless?", "createdAt": "2019-03-27T16:27:57Z"}}, {"node": {"author": {"__typename": "User", "login": "ellis-bigelow"}, "body": "Thinking a little further on this, serverless is broader than serving. I think I like Clive's kfserving suggestion best.", "createdAt": "2019-03-27T16:28:48Z"}}, {"node": {"author": {"__typename": "User", "login": "abhi-g"}, "body": "Created and setup [https://github.com/kubeflow/kfserving](https://github.com/kubeflow/kfserving)\r\n", "createdAt": "2019-03-27T21:31:27Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Script to plot number of open issues has a bug; number of open issues shouldn't be monotonic", "body": "https://github.com/kubeflow/community/blob/master/scripts/project_stats.ipynb\r\n\r\nSee plot below the number of open issues shouldn't be increasing monotonically.\r\nIt should go up and down. \r\nat time t the number of open issues should be the number of open issues at that time. However, I suspect right now we are only counting issues if they are still open and were opened prior to time t.\r\n\r\n![newplot (2)](https://user-images.githubusercontent.com/777219/55298071-5bd55c80-53e0-11e9-80d2-2cd2f81c5a82.png)\r\n", "comments": {"totalCount": 0, "edges": []}}}, {"node": {"author": {"__typename": "User", "login": "merlintang"}, "title": "Proposal for a XGBOOST operator ", "body": "## Motivation\r\nXGBOOST is the state of art approach for machine learning. Additionally to deploy XGboost over Yarn, or Spark, it is necessary to provide Kubernetes with the ability to handle distributed XGBoost training and prediction. The Kubernetes Operator for XGBOOST reduces the gap to build distributed XGBOOST over Kubernetes,  and allow XGBOOST applications to be specified, run, and monitored idiomatically on Kubernetes.\r\n\r\nThe operator allows ML applications based XGBOOST to be specified in a declarative manner (e.g., in a YAML file) and run without the need to deal with the XGBOOST submission process. It also enables status of XGBOOST job to be tracked and presented idiomatically like other types of workloads on Kubernetes. This document discusses the design and architecture of the operator.\r\n\r\n## Goals\r\n1. Provide a common custom resource definition (CRD)  for defining a single-node or multiple node  XGBOOST training and predication job.\r\n\r\n2. Implement a custom controller to manage the CRD,  create dependency resources, and reconcile the desired states. \r\n\r\nMore details\r\nA XGBOOST operator\r\nA way to deploy the operator\r\nA single pod XGBOOST example\r\nA distributed XGBOOST example\r\n\r\n## Non-Goals\r\nIssues or changes not being addressed by this proposal.\r\n\r\n## UI or API\r\nCustom Resource Definition\r\nThe custom resource submitted to the Kubernetes API would look something like this:\r\n\r\n```yaml\r\napiVersion: \"kubeflow.org/v1alpha1\"\r\nkind: \"XGBoostJob\"\r\nmetadata:\r\n  name: \"xgboost-example-job\"\r\n  command: [\"xgboost\"]\r\n        args: [\r\n          \"-bind-to\", \"none\",\r\n          '-distributed', \"yes\",\r\n          \"-job-type\", \"train\",\r\n          \"python\", \"scripts/xgboost_test/xgboost_test.py\",\r\n          \"--model\", \"modelname\"\r\n        ]\r\nspec:\r\n  backend: \"rabit\"\r\n  masterPort: \"23456\"\r\n  replicaSpecs:\r\n    - replicas: 1\r\n      ReplicaType: MASTER\r\n      template:\r\n        spec:\r\n          containers:\r\n            - image: xgboost/xgboost:latest\r\n              name: master\r\n              imagePullPolicy: IfNotPresent\r\n          restartPolicy: OnFailure\r\n    - replicas: 2\r\n      ReplicaType: WORKER\r\n      template:\r\n        spec:\r\n          containers:\r\n            - image: xgboost/xgboost:latest\r\n              name: worker\r\n          restartPolicy: OnFailure\r\n```\r\n\r\nThis XGBoostJob resembles the existing TFJob for the tf-operator.  backend defines the protocol the XGboost workers to communicate when initializing the worker group. masterPort defines the port the group will use to communicate with the master's Kubernetes service.\r\n\r\n### Resulting Master\r\n\r\n```yaml\r\nkind: Service\r\napiVersion: v1\r\nmetadata:\r\n  name: xgboost-master-${job_id}\r\nspec:\r\n  selector:\r\n    app: xgboost-master-${job_id}\r\n  ports:\r\n  - port: 23456\r\n    targetPort: 23456\r\n```\r\n\r\nDetails\r\n```yaml\r\napiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  name: xgboost-master-${job_id}\r\n  labels:\r\n    app: xgboost-${job_id}\r\nspec:\r\n  containers:\r\n  - image: xgboost/xgboost:latest\r\n    imagePullPolicy: IfNotPresent\r\n    name: master\r\n    env:\r\n      - name: MASTER_PORT\r\n        value: \"23456\"\r\n      - name: MASTER_ADDR\r\n        value: \"localhost\"\r\n      - name: WORLD_SIZE\r\n        value: \"3\"\r\n        # Rank 0 is the master\r\n      - name: RANK\r\n        value: \"0\"\r\n    ports:\r\n      - name: masterPort\r\n        containerPort: 23456\r\n  restartPolicy: OnFailure\r\n```\r\n### Resulting Worker\r\n\r\n```yaml\r\napiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  name: xgboost-worker-${job_id}\r\nspec:\r\n  containers:\r\n  - image: xboost/xgboost:latest\r\n    imagePullPolicy: IfNotPresent\r\n    name: worker\r\n    env:\r\n    - name: MASTER_PORT\r\n      value: \"23456\"\r\n    - name: MASTER_ADDR\r\n      value: xgboost-master-${job_id}\r\n    - name: WORLD_SIZE\r\n      value: \"3\"\r\n    - name: RANK\r\n      value: \"1\"\r\n  restartPolicy: OnFailure\r\n```\r\nThe worker spec generates a pod. They will communicate to the master through the master's service name.\r\n\r\n## Design\r\n\r\nThe design of distributed XGBOOST follow the Rabit protocol of XGBOOST. The rabit design can be found here. Thus, XGBoost operator is coming to provide the framework for start the master node and slave nodes for Rabit as following way. \r\n\r\nThe master node of Rabit is initialized, and each slave node comes to connect with master node via the provided port and IP. Each work in pods to read data from locally, and map the input data into Dmatrix format for XGBoost.\r\na. For training job: One of worker is selected as Host, and other workers use the IP and port of number of HOST to build the rabit network for training as the Figure 1. \r\nb. For predication job: the trained model is popugate to each work node, and use the local validation data for predication..\r\n\r\n![image](https://user-images.githubusercontent.com/1431801/55560170-459e0800-5722-11e9-92e0-11dcd1cee889.png)\r\n\r\n\r\n## Alternatives Considered\r\nDescription of possible alternative solutions and the reasons they were not chosen.", "comments": {"totalCount": 15, "edges": [{"node": {"author": {"__typename": "User", "login": "merlintang"}, "body": "Thanks for your comments and update.\n\nI totally agree that we can share the code of kuberflow/common. I would\ncheck the diff between common and xgboost operator. It would be excited to\nuse xgboost for the test bed for common operator. I would send a followup\nPR for the xgboost over common operator.\n\nOn Tue, Apr 9, 2019 at 10:55 AM Richard Liu <notifications@github.com>\nwrote:\n\n> Yes please use the kubeflow/common library and file issues if you find any\n> problems. Thanks!\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/kubeflow/community/issues/247#issuecomment-481082025>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABXY-awxLeXjXCPlZNGghi4OtRvWldS3ks5vfAE9gaJpZM4cc1kL>\n> .\n>\n", "createdAt": "2019-04-10T14:38:44Z"}}, {"node": {"author": {"__typename": "User", "login": "merlintang"}, "body": "@jlewi should we create a repo under kubeflow for xgboost operator ? ", "createdAt": "2019-04-17T01:06:44Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I have created https://github.com/kubeflow/xgboost\r\n\r\nShould we close this issue out and open up more specific issues in that repo?\r\n\r\nA good place to start would be to define a ROADMAP.md in that repository.\r\n\r\nCan we aim to have an alpha version of the custom resource as part of 0.6 which will be released end of June?", "createdAt": "2019-04-22T14:23:33Z"}}, {"node": {"author": {"__typename": "User", "login": "terrytangyuan"}, "body": "@jlewi Thanks! Would it be better to change the repo name to be xgboost-operator so it's more consistent with repos for the other operators? ", "createdAt": "2019-04-23T03:41:59Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "+1 for xgboost-operator", "createdAt": "2019-04-23T03:46:24Z"}}, {"node": {"author": {"__typename": "User", "login": "merlintang"}, "body": "xgboost-operator would be a better name.\n\n+1\n\n> On Apr 23, 2019, at 11:46 AM, Ce Gao <notifications@github.com> wrote:\n> \n> +1 for xgboost-operator\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n", "createdAt": "2019-04-23T08:49:00Z"}}, {"node": {"author": {"__typename": "User", "login": "richardsliu"}, "body": "This can be closed right? @merlintang ", "createdAt": "2019-07-17T23:35:55Z"}}, {"node": {"author": {"__typename": "User", "login": "terrytangyuan"}, "body": "Yes.\r\n\r\n/close", "createdAt": "2019-07-17T23:44:58Z"}}, {"node": {"author": {"__typename": "User", "login": "k8s-ci-robot"}, "body": "@terrytangyuan: Closing this issue.\n\n<details>\n\nIn response to [this](https://github.com/kubeflow/community/issues/247#issuecomment-512609245):\n\n>/close\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>", "createdAt": "2019-07-17T23:44:59Z"}}, {"node": {"author": {"__typename": "User", "login": "merlintang"}, "body": "yes thanks richard\n\n\n> On Jul 17, 2019, at 4:35 PM, Richard Liu <notifications@github.com> wrote:\n> \n> This can be closed right? @merlintang\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n", "createdAt": "2019-07-18T00:22:35Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Setup project maintainers group", "body": "Prow has a new /project command see kubernetes/test-infra#10514.\r\n\r\nThis uses a corresponding team list to specify which users have permission to add issues to projects.\r\n\r\nWe should set that up.\r\n\r\n/assign @jlewi ", "comments": {"totalCount": 18, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/project 0.5.0", "createdAt": "2019-05-06T00:54:53Z"}}, {"node": {"author": {"__typename": "User", "login": "k8s-ci-robot"}, "body": "@jlewi: A column is not provided or it's not valid for the project 0.5.0. Please provide one of the following columns in the command:\n[New kfctl Go binary is ready for users Replace JupyterHub Demo Jupyter Notebooks In their Own Namespace GCP landing page Hyperparameter Tuning Build / Train / Deploy from notebook Multi-user kubeflow Deploy Kubeflow TFJob/PyTorch 1.0 Fit & Finish kfctl supports kustomize Examples Done]\n\n<details>\n\nIn response to [this](https://github.com/kubeflow/community/issues/250#issuecomment-489478587):\n\n>/project 0.5.0\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>", "createdAt": "2019-05-06T00:54:58Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/project 0.5.0 New", "createdAt": "2019-05-06T00:55:21Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@taragu Any idea what I'm doing wrong in terms of using the project plugin? It looks like if I don't specify a column name I get an error as seen above complaining column isn't specified. But if I specify a column name it doesn't seem to work.", "createdAt": "2019-05-06T00:58:27Z"}}, {"node": {"author": {"__typename": "User", "login": "taragu"}, "body": "@jlewi Thanks for letting me know. This does look like a bug. At a glance I'm not sure what's wrong. I will open an issue and fix it.", "createdAt": "2019-05-06T02:01:00Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/projects 0.5.0", "createdAt": "2019-06-04T16:23:48Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@kkasravi Seemed able to do this\r\nhttps://github.com/kubeflow/kubeflow/issues/3400#issuecomment-498635486\r\n\r\nusing \r\n\r\n> /projects istio-kustomize-readiness", "createdAt": "2019-06-04T16:25:27Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "/projects istio-kustomize-readiness", "createdAt": "2019-06-04T16:25:36Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "I wonder if this is an issue with membership or permissions.\r\nteam is set here\r\nhttps://github.com/jlewi/test-infra/blob/72c4c8e7632d2c758ffe7fa4e2c15ec24721706e/prow/plugins.yaml#L269\r\n\r\nIt looks like the team \"kubeflow-project-maintainers\" no longer exists.\r\n\r\nI wonder if that's because we started sync'ing the groups from github\r\nhttps://github.com/kubeflow/internal-acls/blob/master/github-orgs/kubeflow/org.yaml\r\n\r\nAnd we never defined the group in the YAML file.\r\n\r\n", "createdAt": "2019-06-04T16:33:38Z"}}, {"node": {"author": {"__typename": "User", "login": "kkasravi"}, "body": "actually that didn't work. I had to go the the particular project - open the menu tab on the far right-hand side, search for an issue and drag it to the right column", "createdAt": "2019-06-04T22:10:31Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Delete core-approvers GitHub group", "body": "This group is no longer used. I think it predates prow.\r\n\r\nA list of members can be found for posterity in \r\nhttps://github.com/kubeflow/internal-acls/blob/1ab796764e63f605344980951b0f99128450ce84/github-orgs/kubeflow/org.yaml#L315\r\n\r\nLooks like it had write access to 13 groups.\r\n\r\nThe group of users is largely folks who haven't been very active recently so I think its safe to remove.", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "Bot", "login": "issue-label-bot"}, "body": "Issue-Label Bot is automatically applying the label `improvement/enhancement` to this issue, with a confidence of 0.63. Please mark this comment with :thumbsup: or :thumbsdown: to give our bot feedback! \n\n Links: [app homepage](https://github.com/marketplace/issue-label-bot), [dashboard](https://mlbot.net/data/kubeflow/community) and [code](https://github.com/hamelsmu/MLapp) for this bot.", "createdAt": "2019-05-09T12:46:45Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Deleted that group.\r\n\r\nAlso deleted examples-approvers.", "createdAt": "2019-05-09T12:51:23Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Identify PRs that need attention", "body": "The number of PRs keeps growing; we are now up to ~500 PRs per 28 days.\r\n\r\nThe backlog of PRs seems to be growing.\r\nWe have 44 open PRs in kubeflow\r\nhttps://github.com/kubeflow/kubeflow/pulls?page=2&q=is%3Apr+is%3Aopen\r\n\r\nIt would be helpful to generate a report that lists outstanding PRs that need attention.\r\n\r\nI think a good starting point would be \r\n\r\n* Use GitHub API to list all open PRs in kubeflow repos\r\n* Determine whether the last comment was by the PR creator or not\r\n* If the last comment was by the PR creator then they are most likely waiting on a reviewer to respond\r\n* Compute how long the PR creator has been waiting for a response and print out the issues\r\n\r\nWe could do this in Python and possible in a jupyter notebook. Jupyter might be useful for ad-hoc manipulation.\r\n\r\nHere's a snippet for querying GitHub using graphql and python\r\nhttps://github.com/kubeflow/community/blob/192964ba4bff1896f2a3667eb806350fe8ee5c81/scripts/project_stats.py#L76\r\n", "comments": {"totalCount": 5, "edges": [{"node": {"author": {"__typename": "Bot", "login": "issue-label-bot"}, "body": "Issue-Label Bot is automatically applying the label `improvement/enhancement` to this issue, with a confidence of 0.69. Please mark this comment with :thumbsup: or :thumbsdown: to give our bot feedback! \n\n Links: [app homepage](https://github.com/marketplace/issue-label-bot), [dashboard](https://mlbot.net/data/kubeflow/community) and [code](https://github.com/hamelsmu/MLapp) for this bot.", "createdAt": "2019-05-16T03:24:33Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "Agree. We need such a dashboard for PR. Could we add labels such as `status/needs-reply` to the PRs that the last comment was by the PR creator", "createdAt": "2019-05-16T03:41:01Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Maybe start with a python script and then go from there?", "createdAt": "2019-05-16T19:03:25Z"}}, {"node": {"author": {"__typename": "User", "login": "theadactyl"}, "body": "There's a service I've been looking into to generate dashboards: https://gitalytics.com/ \r\nThoughts?", "createdAt": "2019-05-22T13:11:10Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@theadactyl Does gitalytics provide this info?\r\n/cc @zabbasi ", "createdAt": "2019-06-06T03:29:17Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "title": "[chore] Insufficient quota of container build in gcloud", "body": "https://console.cloud.google.com/cloud-build/builds?project=kubeflow-ci&query=status%20%3D%20%22QUEUED%22 shows that we have many pending builds.\r\n\r\nMost builds are requested by katib. Maybe we could find a temp solution in kaitb. But I think it is better to increase the quota.", "comments": {"totalCount": 4, "edges": [{"node": {"author": {"__typename": "Bot", "login": "issue-label-bot"}, "body": "Issue-Label Bot is automatically applying the label `improvement/enhancement` to this issue, with a confidence of 0.54. Please mark this comment with :thumbsup: or :thumbsdown: to give our bot feedback! \n\n Links: [app homepage](https://github.com/marketplace/issue-label-bot), [dashboard](https://mlbot.net/data/kubeflow/community) and [code](https://github.com/hamelsmu/MLapp) for this bot.", "createdAt": "2019-05-16T04:57:31Z"}}, {"node": {"author": {"__typename": "User", "login": "johnugeorge"}, "body": "@richardsliu created a request to increase quota", "createdAt": "2019-05-16T11:40:50Z"}}, {"node": {"author": {"__typename": "User", "login": "richardsliu"}, "body": "This should be fixed now. The concurrent build limit is raised to 30.\r\n\r\n/close\r\n", "createdAt": "2019-05-16T18:22:39Z"}}, {"node": {"author": {"__typename": "User", "login": "k8s-ci-robot"}, "body": "@richardsliu: Closing this issue.\n\n<details>\n\nIn response to [this](https://github.com/kubeflow/community/issues/271#issuecomment-493179034):\n\n>This should be fixed now. The concurrent build limit is raised to 30.\r\n>\r\n>/close\r\n>\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>", "createdAt": "2019-05-16T18:22:40Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "scottilee"}, "title": "Update Kubeflow Calendar", "body": "Please add more weekly meetings to the Kubeflow calendar (https://calendar.google.com/calendar/embed?src=kubeflow.org_7l5vnbn8suj2se10sen81d9428@group.calendar.google.com) such as \"KF Serving Working Group Sync @ Weekly from 9am to 10am on Wednesday (PST)\".\r\n\r\nAlso, are the associated Hangouts for each meeting recorded? If so, are recordings posted to a central place or retroactively added as an attachment to the meeting invite?", "comments": {"totalCount": 1, "edges": [{"node": {"author": {"__typename": "Bot", "login": "issue-label-bot"}, "body": "Issue-Label Bot is automatically applying the label `improvement/enhancement` to this issue, with a confidence of 0.97. Please mark this comment with :thumbsup: or :thumbsdown: to give our bot feedback! \n\n Links: [app homepage](https://github.com/marketplace/issue-label-bot), [dashboard](https://mlbot.net/data/kubeflow/community) and [code](https://github.com/hamelsmu/MLapp) for this bot.", "createdAt": "2019-06-29T22:52:51Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Fork issue-label-bot to Kubeflow", "body": "Opening this issue about creating a downstream fork of \r\nissue-label-bot in kubeflow.org.\r\n\r\nhttps://github.com/machine-learning-apps/Issue-Label-Bot/issues\r\n\r\nWe've been working on this with the creator @hamelsmu and used it to demo motivate Kubeflow.\r\nWe also are using the label bot on our repos.\r\n\r\nThe motivation for creating a downstream fork in kubeflow.org is because we'd like to leverage prow for development and collaboration on that repo.\r\n\r\nWe could also use kubeflow-incubator but I'm not sure that's setup yet for prow.\r\n\r\nWe will be working with @hamelsmu on the issue-label-bot to allow training repo specific models.\r\n\r\n", "comments": {"totalCount": 4, "edges": [{"node": {"author": {"__typename": "Bot", "login": "issue-label-bot"}, "body": "Issue Label Bot is not confident enough to auto-label this issue. See [dashboard](https://mlbot.net/data/kubeflow/community) for more details.", "createdAt": "2019-07-02T18:47:12Z"}}, {"node": {"author": {"__typename": "User", "login": "hamelsmu"}, "body": "cc: @rand @herbfei @inc0 ", "createdAt": "2019-07-02T19:07:51Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "This has been forked.\r\nhttps://github.com/kubeflow/Issue-Label-Bot", "createdAt": "2019-07-10T06:17:25Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@inc0 and @hamelsmu gave you write permissions.\r\nI bootstrapped an OWNERs file\r\nhttps://github.com/kubeflow/Issue-Label-Bot/commit/721825ed44f463ecc59c45ec4f19867d3af44b96\r\n\r\nI added myself, @inc0 and @hamelsmu \r\n\r\nIf there are additional folks that should be added just an open a PR.\r\n\r\n\r\n", "createdAt": "2019-07-10T06:22:06Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "texasmichelle"}, "title": "Update community call recording instructions", "body": "Update instructions to delete Zoom recordings once they've been downloaded and moved to the public drive.", "comments": {"totalCount": 1, "edges": [{"node": {"author": {"__typename": "Bot", "login": "issue-label-bot"}, "body": "Issue-Label Bot is automatically applying the label `improvement/enhancement` to this issue, with a confidence of 0.86. Please mark this comment with :thumbsup: or :thumbsdown: to give our bot feedback! \n\n Links: [app homepage](https://github.com/marketplace/issue-label-bot), [dashboard](https://mlbot.net/data/kubeflow/community) and [code](https://github.com/hamelsmu/MLapp) for this bot.", "createdAt": "2019-07-09T20:59:42Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Setup GitHub application to auto-add issues to projects", "body": "It would be really valuable if we could we use Kanban boards to track issues.\r\nIn particular, it would be great to track issues which need to be triaged\r\n\r\nI think we could do this by having separate Kanban boards for\r\n\r\n* Bugs\r\n* Features\r\n* Customer Questions\r\n\r\nWe can then auto-add issues into one of these projects based on the labels auto applied by our label classification bot.\r\n\r\nThese issues would then show up in the TODO column and the person doing triage could move them to the appropriate column", "comments": {"totalCount": 14, "edges": [{"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Looks like there are some issues getting this to work.\r\nhttps://github.com/philschatz/project-bot/issues/9", "createdAt": "2019-07-15T21:16:31Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "It would be great if someone could try this out either on their personal repo or on a kubeflow repo to see if we can get it to work for us. I think it would be super-helpful to triage issues.", "createdAt": "2019-07-16T16:01:12Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I think the feature is really helpful. I can take a look.", "createdAt": "2019-07-17T02:03:19Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "/assign @gaocegege", "createdAt": "2019-07-17T02:03:26Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I created a fork https://github.com/gaocegege/project-bot for https://github.com/apps/project-bot-for-orgs. After the test, I think we can support org-level projects but I am not sure why the original app does not support it. Maybe the config of the app is missing.\r\n\r\nBut, the app has limited support for adding new cards. Maybe it is better to maintain a new app for kubeflow community. We may want to add some custom commands rather than add_issues or add_prs.\r\n\r\nWDYT @jlewi ", "createdAt": "2019-07-17T06:50:57Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@gaocegege So you built an app from your fork? Did you make any changes? \r\n\r\nDid you verify that the official version of the app doesn't work?\r\n\r\n> But, the app has limited support for adding new cards. Maybe it is better to maintain a new app for kubeflow community. We may want to add some custom commands rather than add_issues or add_prs.\r\n\r\nWhat is the limitation for adding new cards? \r\n\r\nI think the functionality we'd like is as follows\r\n\r\n* Someone files an issue\r\n* The issue is labeled \"Bug\"\r\n* The issue is automatically added to the TO DO column in the bug project\r\n\r\nDoes that work today?\r\n", "createdAt": "2019-07-19T05:32:36Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "@jlewi \r\n\r\n> Did you verify that the official version of the app doesn't work?\r\n\r\nThe upstream code itself can work. But I cannot use it for my org. But after I fork and run the code in another app with right permissions, it can work.\r\n\r\n> What is the limitation for adding new cards?\r\n\r\nIt only supports add_issue and add_pr. If it works for us, then we do not need to update the code.\r\n\r\n> Does that work today?\r\n\r\nNo, it only supports adding cards when there is new issues or prs. Labels only can be used to move the cards from one column to another. We cannot let the bot add the card when the label is added.\r\n\r\nIf we want it, we need to update the code.", "createdAt": "2019-07-19T05:38:34Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Thanks @gaocegege. If it doesn't support adding issues to when labels are added then I don't think it provides us the functionality we need most.\r\n\r\nIn that case, I think it makes the most sense to add that functionality to our existing label bot.\r\nhttps://github.com/kubeflow/code-intelligence/blob/f8ccf35ceea09a35d00142627864651d21365ee7/Issue-Label-Bot-v1/flask_app/app.py#L163\r\n\r\n@gaocegege Any interest in picking that up?\r\n", "createdAt": "2019-07-19T14:04:34Z"}}, {"node": {"author": {"__typename": "User", "login": "gaocegege"}, "body": "I can have a look if it is not in high priority (I may not have much time for it these days)", "createdAt": "2019-07-20T14:31:21Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "@gaocegege Not super high priority but any help is certainly appreciated.", "createdAt": "2019-07-20T21:16:19Z"}}]}}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "title": "Auto close PRs", "body": "GitAlytics dashboard is showing that we have PRs open for almost a year.\r\n\r\nWe should close PRs automatically after some amount of time.\r\n\r\nCan the issue closer bot do this?", "comments": {"totalCount": 2, "edges": [{"node": {"author": {"__typename": "Bot", "login": "issue-label-bot"}, "body": "Issue-Label Bot is automatically applying the label `improvement/enhancement` to this issue, with a confidence of 0.75. Please mark this comment with :thumbsup: or :thumbsdown: to give our bot feedback! \n\n Links: [app homepage](https://github.com/marketplace/issue-label-bot), [dashboard](https://mlbot.net/data/kubeflow/community) and [code](https://github.com/hamelsmu/MLapp) for this bot.", "createdAt": "2019-07-19T13:58:11Z"}}, {"node": {"author": {"__typename": "User", "login": "jlewi"}, "body": "Stale bot should be able to do it:\r\nhttps://probot.github.io/apps/stale/\r\n\r\nSo it looks like the fact that we have really stale PRs is probably because its not enabled on certain repositories or configured correctly.", "createdAt": "2019-07-19T14:08:45Z"}}]}}}]}}}}