apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    sidecar.istio.io/inject: "false"
  name: run-notebook
  namespace: label-bot-prod
spec:
  params:
  - description: Path to the notebook to run. This should be the relative path relative
      to the root of the repository where the notebook lives.
    name: notebook-path
    type: string
  - description: This should be the GCS path that the rendered notebook will be written
      to. This should be a GCS path that is accessible from the KF cluster where the
      notebook runs. This should be a directory.
    name: output
    type: string
  - default: gcr.io/kubeflow-images-public/tensorflow-1.15.2-notebook-cpu:1.0.0
    description: The docker image to run the  notebook in
    name: image
    type: string
  - default: ""
    description: If supplied path to a requirements file to install
    name: requirements
    type: string
  resources:
    inputs:
    - name: notebook-repo
      type: git
  steps:
  - image: $(inputs.params.image)
    name: run
    script: "#!/usr/bin/env bash\nset -x\nmkdir -p /workspace/outputs\n\nfilename=$(basename
      $(inputs.params.notebook-path))\n\n# pin jupyter-client to deal with https://github.com/nteract/papermill/issues/486\npip
      install --upgrade --user papermill jupyter-client==6.1.2\n\n# If there is a
      requirements.txt install it.\n# Even if the notebook will do this its good to
      do it before invoking the notebook-path\n# as this ensure any changes to the
      python path are properly applied\n\nrequirements_rpath=$(inputs.params.requirements)
      \     \nif [ -n \"${requirements_rpath}\" ]; then\n  requirements=/workspace/$(inputs.resources.notebook-repo.name)/${requirements_rpath}\n
      \ pip install --user -r ${requirements}      \nfi\n\nrpath=$(dirname $(inputs.params.notebook-path))\nwork_dir=/workspace/$(inputs.resources.notebook-repo.name)/${rpath}\ncd
      ${work_dir}\n\npython -m papermill.cli \\\n /workspace/$(inputs.resources.notebook-repo.name)/$(inputs.params.notebook-path)
      \\\n /workspace/outputs/${filename} \\\n --request-save-on-cell-execute \n\necho
      Done running notebook    \n"
  - image: $(inputs.params.image)
    name: convert
    script: |
      #!/usr/bin/env bash
      set -x
      filename=$(basename $(inputs.params.notebook-path))
      jupyter nbconvert --to html /workspace/outputs/${filename}
  - image: gcr.io/google.com/cloudsdktool/cloud-sdk
    name: upload
    script: |
      #!/usr/bin/env bash
      set -x
      now=$(date +%Y%m%d-%H%M%S)
      gsutil cp -r /workspace/outputs/ $(inputs.params.output)/${now}
